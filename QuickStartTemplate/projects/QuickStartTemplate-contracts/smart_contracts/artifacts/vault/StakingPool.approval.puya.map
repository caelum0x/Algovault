{
  "version": 3,
  "sources": [
    "/Users/arhansubasi/Algorand-dApp-Quick-Start-Template-TypeScript/QuickStartTemplate/projects/QuickStartTemplate-contracts/smart_contracts/vault/staking_pool.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;AAAA;;AA+ME;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AApBA;;AAAA;AAAA;AAAA;;AAAA;AA3LF;;;AAAA;;;AA2LE;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AAhLF;;;AAAA;;;AAgLE;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAjBC;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAzBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAhDA;;AAAA;AAAA;AAAA;;AAAA;AAtFH;;;AAAA;AAsFG;;;AAAA;;AAtCA;;AAAA;AAAA;AAAA;;AAAA;AAhDH;;;AAAA;AAgDG;;;AAAA;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAnBA;;AAAA;AAAA;AAAA;;AAAA;AAdH;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAcG;;;AAAA;;AAdH;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAcE;;;AARA;AAAA;AAAA;AAAA;AAcS;AAAP;AAbF;;;;;;;;;AAeE;;AAAA;AAnBF;;AAoBE;;AAAA;AAfF;;AAgBE;;AAAA;AAtBF;AAuB2B;AAAzB;AArBF;AAsBqC;;AAAnC;AArBF;AAsBiC;AAA/B;AArBF;AAsB0B;AAAxB;AAnBF;;AAoB+B;AAA7B;AAjBF;;;;;;;AAkByB;;AAAvB;;AAGF;;;;;AA3BA;AAAA;AAAA;AAAA;AA6BmC;AAA1B;AAAP;AAE2B;;AAArB;AAjCR;AAAA;AAAA;AAAA;AAkC2B;AAAA;;;AAlC3B;AAAA;AAAA;AAAA;AAkCqE;;AAAA;AAAA;;;AAE/D;;AAAA;;;AAtCN;AAAA;AAAA;AAAA;AAsCM;;;AArCN;AAAA;;AAAA;AAAA;AAsCU;;AAAiB;AApC3B;AAAA;AAAA;AAAA;AAqCoE;AA5ChD;AA4CgD;AAxCpE;AAAA;AAAA;AAAA;AAwCmE;AAAhC;AArCnC;AAqCI;AAAA;AAtCJ;AAyCE;;AAAA;;AAP6G;;;;;;AAU/G;;;;;;;AA1CA;AAAA;AAAA;AAAA;AA4CmC;AAA1B;AAAP;AAzCF;AAAA;;AAAA;AAAA;AA0CS;AAAP;AA3CF;AAAA;;AAAA;AAAA;AA4CS;;AAAA;AAAP;AAEA;;;AAEoB;;AA7Df;AA8DsD;;AA9DtD;AAAA;AAAA;;AAAA;AA+D0D;;AA/D1D;AAAA;;AAgE6D;;AAhE7D;AAAA;AAkE0B;AAAA;;AAAV;;;AAA6B;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AACX;;AAAA;AAAA;;AAAd;;;AAAqC;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAzDhE;AAAA;AAAA;AAAA;AA4D2B;;AAAA;AAnEP;AAmEM;AAAA;;AAAA;AAAA;;;AA5D1B;AAAA;AAAA;AAAA;AA4D0F;;AAAA;AAnEtE;AAmEqE;AAAA;;AAAA;;;AACvF;;AAAA;;;AACE;AACgB;;;;;;;;AADhB;;;AAAA;;;AAAA;AAOF;;AAAA;;AAAS;AArEX;AAAA;AAAA;AAAA;AAsEgB;;AAAA;AA7EI;AA6EL;AACM;;AAEnB;;AAAA;AAAA;;AAAA;AAAA;AACA;AAAA;AAAA;;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AA9EF;AAAA;AAAA;AAAA;AAiF2B;;AAAA;AAjF3B;AAiFE;AAAA;;AAlBsJ;;;;;;AAHhF;;;;;;AADZ;;;;;;AAyB5D;;;;;;AAhFA;AAAA;AAAA;AAAA;AAkFmC;AAA1B;AAAP;AACA;;AAAA;AAEA;;;AAEoB;;AAAd;;AACqD;;AAnGtD;AAAA;AAAA;;AAAA;AAoG0D;;AApG1D;AAAA;AAAA;;AAAA;;AAqG6D;;AArG7D;AAAA;;AAuGY;AAAA;AAAA;;AAAjB;AACmC;AAAA;AAAA;AAAA;;AAAA;AACQ;AAAA;;AAAd;;;AAAqC;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAC3D;;AAAA;AAAA;;AAAA;AAAP;AAhGF;AAAA;AAAA;AAAA;AAmG2B;AA1GP;AA0GM;AAAA;;AAAA;AAAA;;;AAnG1B;AAAA;AAAA;AAAA;AAmGkG;;AAAA;AA1G9E;AA0G6E;AAAA;;AAAA;;;AAG/F;;AAAA;;AAAa;AAAb;AAAA;;AAtGF;AAAA;AAAA;AAAA;AAuGoB;;AAAA;AA9GA;AA8GD;AAAjB;;AAEA;;;AACY;;AAAA;;AACI;;AAAA;;AACG;;AAAA;;AA/GrB;AAAA;AAAA;AAAA;AAqH2B;;AAAA;AArH3B;AAqHE;AAAA;AAEA;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAKA;;AAAA;;;AACE;;;;;;;;;AAAA;;;AAAA;;;AAAA;;AAZA;;AAAA;AAAA;;AAAA;AAAA;AACA;;AAAA;AAAA;;AAAA;AAAA;;;;AAZoK;;;;;;AAJ5F;;;;;;AAkC5E;;;;;;AAhIA;AAAA;AAAA;AAAA;AAkImC;AAA1B;AAAP;AACA;;;AAEoB;;AAAd;;AACqD;;AAjJtD;AAAA;AAkJ0D;;AAlJ1D;AAAA;AAAA;;AAoJY;AAAA;AAAA;;AAAjB;AAC+B;AAAA;AAAA;AAAA;;AAAA;AACQ;AAAA;;AAAd;;;AAAqC;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AA5IhE;AAAA;AAAA;AAAA;AA6I2B;;AAAA;AApJP;AAoJM;AAAA;;AAAA;AAAA;;;AA7I1B;AAAA;AAAA;AAAA;AA6I0F;;AAAA;AApJtE;AAoJqE;AAAA;;AAAA;;;AAEvF;;AAAA;;;AA/IF;AAAA;AAAA;AAAA;AAgJkB;;AAAA;AAvJE;AAuJH;AACb;AAAA;;AAAA;AAAA;AACA;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAKF;AAVsJ;;;;;;AADhF;;;;;;AAgBlD;;AAtKf;AAuKsD;;AAvKtD;AAwKY;AAAA;AAAA;;AAAjB;AACiC;AAAA;AAAA;AAAA;AAAA;AAAA;AACvB;AAAA;;AA1KL;;AA2KoC;;AA3KpC;AA2KuD;;AA3KvD;;AA4KoC;;AA5KpC;AA4K0D;;AArKjE;AAAA;AAAA;AAAA;AAsK2B;;AAAA;AAtK3B;AAsKE;AAAA;AACA;;;;;AAAA;;;AAAA;;;AAAA;;AAOF;;;;;;AArLO;;AAsLmD;;AAtLnD;AAAA;AAAA;;AAuLuD;;AAvLvD;AAAA;AAAA;;AAwL0D;;AAxL1D;AAAA;AA0LO;AAAA;;AAAV;;;AAA6B;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AACf;;AAAA;AAAA;;AAAd;;;AAAqC;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AACpB;;AAAA;AAAA;;AAAjB;;;AAA2C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAH7C;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAGqD;;;;AADN;AAAA;;;;;AADR;AAAA;;;;;AAMzC;;;;;;;AAhMO;;AAiMmD;;AAjMnD;AAAA;AAAA;;AAkMuD;;AAlMvD;AAAA;AAmMU;AAAA;;AAAX;;;AACK;AAAP;;AAAA;AAE6B;;AAAA;AAAA;AAAA;AAAA;;AAAA;AACQ;;AAAA;AAAA;;AAAd;;;AAAqC;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AA7LhE;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAHA;AAAA;AAAA;AAAA;;;;AAkME;;;AACQ;;AAAqB;AAArB;;AAjMV;AAAA;AAAA;AAAA;AAkM6B;AAAA;;;AAlM7B;AAAA;AAAA;AAAA;AAkMuE;;AAAA;AAAA;;;;;;;AACnE;;AAAA;;;AApMJ;AAAA;;AAAA;AAAA;AAqMY;;AAAiB;AA1MT;AA2M4B;AAvMhD;AAAA;AAAA;AAAA;AAuM+C;AAAzC;;AAAoB;;;AAGhB;;;;AAAA;AA9MU;AA8MX;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAoD;;AAAA;;AAAA;AAA3D;;AAAA;AAA+G;;;;AANA;;;;;;AAJzC;;;;;;AAhMxE;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;;AAAA;AAAA;AAuME",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 1000000000000"
    },
    "11": {
      "op": "bytecblock \"accRewardPerShare\" \"totalStaked\" \"poolActive\" \"lastUpdateTime\" \"_amount\" \"_rewardDebt\" 0x151f7c75 \"rewardRate\" \"_lastStakeTime\" \"emergencyPaused\" \"minimumStake\""
    },
    "149": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "151": {
      "op": "bz main_bare_routing@14",
      "stack_out": []
    },
    "154": {
      "op": "pushbytess 0x1c9a8b7f 0xd37319d8 0xfa9d92f5 0x21f1ddff 0x0e708755 0x5ed22589 0x38802374 0x2342c0eb 0xccd3ed26 // method \"initialize(uint64,uint64,uint64)void\", method \"updatePool()void\", method \"stake(uint64)void\", method \"withdraw(uint64)void\", method \"claimRewards()uint64\", method \"emergencyWithdraw()void\", method \"getUserStake(byte[])(uint64,uint64,uint64)\", method \"getPendingRewards(byte[])uint64\", method \"getPoolInfo()(uint64,uint64,uint64,uint64,uint64,uint64)\"",
      "defined_out": [
        "Method(claimRewards()uint64)",
        "Method(emergencyWithdraw()void)",
        "Method(getPendingRewards(byte[])uint64)",
        "Method(getPoolInfo()(uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(getUserStake(byte[])(uint64,uint64,uint64))",
        "Method(initialize(uint64,uint64,uint64)void)",
        "Method(stake(uint64)void)",
        "Method(updatePool()void)",
        "Method(withdraw(uint64)void)"
      ],
      "stack_out": [
        "Method(initialize(uint64,uint64,uint64)void)",
        "Method(updatePool()void)",
        "Method(stake(uint64)void)",
        "Method(withdraw(uint64)void)",
        "Method(claimRewards()uint64)",
        "Method(emergencyWithdraw()void)",
        "Method(getUserStake(byte[])(uint64,uint64,uint64))",
        "Method(getPendingRewards(byte[])uint64)",
        "Method(getPoolInfo()(uint64,uint64,uint64,uint64,uint64,uint64))"
      ]
    },
    "201": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(claimRewards()uint64)",
        "Method(emergencyWithdraw()void)",
        "Method(getPendingRewards(byte[])uint64)",
        "Method(getPoolInfo()(uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(getUserStake(byte[])(uint64,uint64,uint64))",
        "Method(initialize(uint64,uint64,uint64)void)",
        "Method(stake(uint64)void)",
        "Method(updatePool()void)",
        "Method(withdraw(uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(initialize(uint64,uint64,uint64)void)",
        "Method(updatePool()void)",
        "Method(stake(uint64)void)",
        "Method(withdraw(uint64)void)",
        "Method(claimRewards()uint64)",
        "Method(emergencyWithdraw()void)",
        "Method(getUserStake(byte[])(uint64,uint64,uint64))",
        "Method(getPendingRewards(byte[])uint64)",
        "Method(getPoolInfo()(uint64,uint64,uint64,uint64,uint64,uint64))",
        "tmp%2#0"
      ]
    },
    "204": {
      "op": "match main_initialize_route@3 main_updatePool_route@4 main_stake_route@5 main_withdraw_route@6 main_claimRewards_route@7 main_emergencyWithdraw_route@8 main_getUserStake_route@9 main_getPendingRewards_route@10 main_getPoolInfo_route@11",
      "stack_out": []
    },
    "224": {
      "block": "main_after_if_else@18",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "225": {
      "op": "return",
      "stack_out": []
    },
    "226": {
      "block": "main_getPoolInfo_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "228": {
      "op": "!",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "229": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "230": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "232": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "233": {
      "callsub": "smart_contracts/vault/staking_pool.algo.ts::StakingPool.getPoolInfo",
      "op": "callsub getPoolInfo",
      "defined_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "elements_to_encode%7#0",
        "elements_to_encode%8#0"
      ],
      "stack_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "elements_to_encode%7#0",
        "elements_to_encode%8#0"
      ]
    },
    "236": {
      "op": "uncover 5",
      "stack_out": [
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "elements_to_encode%7#0",
        "elements_to_encode%8#0",
        "elements_to_encode%3#0"
      ]
    },
    "238": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "elements_to_encode%7#0",
        "elements_to_encode%8#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "elements_to_encode%7#0",
        "elements_to_encode%8#0",
        "val_as_bytes%5#0"
      ]
    },
    "239": {
      "op": "uncover 5",
      "stack_out": [
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "elements_to_encode%7#0",
        "elements_to_encode%8#0",
        "val_as_bytes%5#0",
        "elements_to_encode%4#0"
      ]
    },
    "241": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "elements_to_encode%7#0",
        "elements_to_encode%8#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "elements_to_encode%5#0",
        "elements_to_encode%6#0",
        "elements_to_encode%7#0",
        "elements_to_encode%8#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ]
    },
    "242": {
      "op": "uncover 5",
      "stack_out": [
        "elements_to_encode%6#0",
        "elements_to_encode%7#0",
        "elements_to_encode%8#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "elements_to_encode%5#0"
      ]
    },
    "244": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%6#0",
        "elements_to_encode%7#0",
        "elements_to_encode%8#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "elements_to_encode%6#0",
        "elements_to_encode%7#0",
        "elements_to_encode%8#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ]
    },
    "245": {
      "op": "uncover 5",
      "stack_out": [
        "elements_to_encode%7#0",
        "elements_to_encode%8#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "elements_to_encode%6#0"
      ]
    },
    "247": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%7#0",
        "elements_to_encode%8#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "elements_to_encode%7#0",
        "elements_to_encode%8#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ]
    },
    "248": {
      "op": "uncover 5",
      "stack_out": [
        "elements_to_encode%8#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "elements_to_encode%7#0"
      ]
    },
    "250": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%8#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "elements_to_encode%8#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ]
    },
    "251": {
      "op": "uncover 5",
      "stack_out": [
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "elements_to_encode%8#0"
      ]
    },
    "253": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%10#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0"
      ]
    },
    "254": {
      "op": "uncover 5",
      "stack_out": [
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%5#0"
      ]
    },
    "256": {
      "op": "uncover 5",
      "stack_out": [
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ]
    },
    "258": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%10#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "259": {
      "op": "uncover 4",
      "stack_out": [
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%7#0"
      ]
    },
    "261": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%10#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "262": {
      "op": "uncover 3",
      "stack_out": [
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%8#0"
      ]
    },
    "264": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%10#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "265": {
      "op": "uncover 2",
      "stack_out": [
        "val_as_bytes%10#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%9#0"
      ]
    },
    "267": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%9#0",
        "val_as_bytes%10#0"
      ],
      "stack_out": [
        "val_as_bytes%10#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "268": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%9#0",
        "val_as_bytes%10#0"
      ]
    },
    "269": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%10#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%10#0"
      ]
    },
    "270": {
      "op": "bytec 6 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%10#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%10#0",
        "0x151f7c75"
      ]
    },
    "272": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "273": {
      "op": "concat",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "274": {
      "op": "log",
      "stack_out": []
    },
    "275": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "276": {
      "op": "return",
      "stack_out": []
    },
    "277": {
      "block": "main_getPendingRewards_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "279": {
      "op": "!",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "280": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "281": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "283": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "284": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "287": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "290": {
      "callsub": "smart_contracts/vault/staking_pool.algo.ts::StakingPool.getPendingRewards",
      "op": "callsub getPendingRewards",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "293": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%4#0"
      ]
    },
    "294": {
      "op": "bytec 6 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%4#0",
        "0x151f7c75"
      ]
    },
    "296": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%4#0"
      ]
    },
    "297": {
      "op": "concat",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "298": {
      "op": "log",
      "stack_out": []
    },
    "299": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "300": {
      "op": "return",
      "stack_out": []
    },
    "301": {
      "block": "main_getUserStake_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "303": {
      "op": "!",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "304": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "305": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "307": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "308": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "311": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "314": {
      "callsub": "smart_contracts/vault/staking_pool.algo.ts::StakingPool.getUserStake",
      "op": "callsub getUserStake",
      "defined_out": [
        "elements_to_encode%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0"
      ],
      "stack_out": [
        "elements_to_encode%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0"
      ]
    },
    "317": {
      "op": "uncover 2",
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%0#0"
      ]
    },
    "319": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "val_as_bytes%1#0"
      ]
    },
    "320": {
      "op": "uncover 2",
      "stack_out": [
        "elements_to_encode%2#0",
        "val_as_bytes%1#0",
        "elements_to_encode%1#0"
      ]
    },
    "322": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%2#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "elements_to_encode%2#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "323": {
      "op": "uncover 2",
      "stack_out": [
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "elements_to_encode%2#0"
      ]
    },
    "325": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "326": {
      "op": "cover 2",
      "stack_out": [
        "val_as_bytes%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "328": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "329": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "330": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%3#0"
      ]
    },
    "331": {
      "op": "bytec 6 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%3#0",
        "0x151f7c75"
      ]
    },
    "333": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "334": {
      "op": "concat",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "335": {
      "op": "log",
      "stack_out": []
    },
    "336": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "337": {
      "op": "return",
      "stack_out": []
    },
    "338": {
      "block": "main_emergencyWithdraw_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "340": {
      "op": "!",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "341": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "342": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "344": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "345": {
      "callsub": "smart_contracts/vault/staking_pool.algo.ts::StakingPool.emergencyWithdraw",
      "op": "callsub emergencyWithdraw"
    },
    "348": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "349": {
      "op": "return",
      "stack_out": []
    },
    "350": {
      "block": "main_claimRewards_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "352": {
      "op": "!",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "353": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "354": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "356": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "357": {
      "callsub": "smart_contracts/vault/staking_pool.algo.ts::StakingPool.claimRewards",
      "op": "callsub claimRewards",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "360": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "361": {
      "op": "bytec 6 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "363": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "364": {
      "op": "concat",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "365": {
      "op": "log",
      "stack_out": []
    },
    "366": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "367": {
      "op": "return",
      "stack_out": []
    },
    "368": {
      "block": "main_withdraw_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "370": {
      "op": "!",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "371": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "372": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "374": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "375": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "378": {
      "op": "btoi",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "379": {
      "callsub": "smart_contracts/vault/staking_pool.algo.ts::StakingPool.withdraw",
      "op": "callsub withdraw",
      "stack_out": []
    },
    "382": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "383": {
      "op": "return",
      "stack_out": []
    },
    "384": {
      "block": "main_stake_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "386": {
      "op": "!",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "387": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "388": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "390": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "391": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "394": {
      "op": "btoi",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "395": {
      "callsub": "smart_contracts/vault/staking_pool.algo.ts::StakingPool.stake",
      "op": "callsub stake",
      "stack_out": []
    },
    "398": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "399": {
      "op": "return",
      "stack_out": []
    },
    "400": {
      "block": "main_updatePool_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "402": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "403": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "404": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "406": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "407": {
      "callsub": "smart_contracts/vault/staking_pool.algo.ts::StakingPool.updatePool",
      "op": "callsub updatePool"
    },
    "410": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "411": {
      "op": "return",
      "stack_out": []
    },
    "412": {
      "block": "main_initialize_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "414": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "415": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "416": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "418": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "419": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "422": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "423": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "426": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "427": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[8]%2#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "430": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "431": {
      "callsub": "smart_contracts/vault/staking_pool.algo.ts::StakingPool.initialize",
      "op": "callsub initialize",
      "stack_out": []
    },
    "434": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "435": {
      "op": "return",
      "stack_out": []
    },
    "436": {
      "block": "main_bare_routing@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "438": {
      "op": "bnz main_after_if_else@18",
      "stack_out": []
    },
    "441": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "443": {
      "op": "!",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "444": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "445": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "446": {
      "op": "return",
      "stack_out": []
    },
    "447": {
      "subroutine": "smart_contracts/vault/staking_pool.algo.ts::StakingPool.initialize",
      "params": {
        "assetId#0": "uint64",
        "rewardRate#0": "uint64",
        "minimumStake#0": "uint64"
      },
      "block": "initialize",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "450": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "451": {
      "op": "bytec_2 // \"poolActive\"",
      "defined_out": [
        "\"poolActive\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"poolActive\""
      ]
    },
    "452": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "453": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "454": {
      "op": "!",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "455": {
      "op": "assert",
      "stack_out": []
    },
    "456": {
      "op": "pushbytes \"assetId\"",
      "defined_out": [
        "\"assetId\""
      ],
      "stack_out": [
        "\"assetId\""
      ]
    },
    "465": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"assetId\"",
        "assetId#0 (copy)"
      ],
      "stack_out": [
        "\"assetId\"",
        "assetId#0 (copy)"
      ]
    },
    "467": {
      "op": "app_global_put",
      "stack_out": []
    },
    "468": {
      "op": "bytec 7 // \"rewardRate\"",
      "defined_out": [
        "\"rewardRate\""
      ],
      "stack_out": [
        "\"rewardRate\""
      ]
    },
    "470": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"rewardRate\"",
        "rewardRate#0 (copy)"
      ],
      "stack_out": [
        "\"rewardRate\"",
        "rewardRate#0 (copy)"
      ]
    },
    "472": {
      "op": "app_global_put",
      "stack_out": []
    },
    "473": {
      "op": "bytec 10 // \"minimumStake\"",
      "defined_out": [
        "\"minimumStake\""
      ],
      "stack_out": [
        "\"minimumStake\""
      ]
    },
    "475": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"minimumStake\"",
        "minimumStake#0 (copy)"
      ],
      "stack_out": [
        "\"minimumStake\"",
        "minimumStake#0 (copy)"
      ]
    },
    "477": {
      "op": "app_global_put",
      "stack_out": []
    },
    "478": {
      "op": "bytec_1 // \"totalStaked\"",
      "defined_out": [
        "\"totalStaked\""
      ],
      "stack_out": [
        "\"totalStaked\""
      ]
    },
    "479": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"totalStaked\"",
        "0"
      ]
    },
    "480": {
      "op": "app_global_put",
      "stack_out": []
    },
    "481": {
      "op": "bytec_3 // \"lastUpdateTime\"",
      "defined_out": [
        "\"lastUpdateTime\""
      ],
      "stack_out": [
        "\"lastUpdateTime\""
      ]
    },
    "482": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "\"lastUpdateTime\"",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "\"lastUpdateTime\"",
        "new_state_value%0#0"
      ]
    },
    "484": {
      "op": "app_global_put",
      "stack_out": []
    },
    "485": {
      "op": "bytec_0 // \"accRewardPerShare\"",
      "defined_out": [
        "\"accRewardPerShare\""
      ],
      "stack_out": [
        "\"accRewardPerShare\""
      ]
    },
    "486": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"accRewardPerShare\"",
        "0"
      ]
    },
    "487": {
      "op": "app_global_put",
      "stack_out": []
    },
    "488": {
      "op": "bytec_2 // \"poolActive\"",
      "stack_out": [
        "\"poolActive\""
      ]
    },
    "489": {
      "op": "intc_1 // 1",
      "defined_out": [
        "\"poolActive\"",
        "1"
      ],
      "stack_out": [
        "\"poolActive\"",
        "1"
      ]
    },
    "490": {
      "op": "app_global_put",
      "stack_out": []
    },
    "491": {
      "op": "bytec 9 // \"emergencyPaused\"",
      "defined_out": [
        "\"emergencyPaused\""
      ],
      "stack_out": [
        "\"emergencyPaused\""
      ]
    },
    "493": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"emergencyPaused\"",
        "0"
      ]
    },
    "494": {
      "op": "app_global_put",
      "stack_out": []
    },
    "495": {
      "op": "pushbytes \"admin\"",
      "defined_out": [
        "\"admin\""
      ],
      "stack_out": [
        "\"admin\""
      ]
    },
    "502": {
      "op": "txn Sender",
      "defined_out": [
        "\"admin\"",
        "new_state_value%1#0"
      ],
      "stack_out": [
        "\"admin\"",
        "new_state_value%1#0"
      ]
    },
    "504": {
      "op": "app_global_put",
      "stack_out": []
    },
    "505": {
      "retsub": true,
      "op": "retsub"
    },
    "506": {
      "subroutine": "smart_contracts/vault/staking_pool.algo.ts::StakingPool.updatePool",
      "params": {},
      "block": "updatePool",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "509": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "timeDiff#0"
      ]
    },
    "511": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "timeDiff#0",
        "0"
      ]
    },
    "512": {
      "op": "bytec_2 // \"poolActive\"",
      "defined_out": [
        "\"poolActive\"",
        "0"
      ],
      "stack_out": [
        "timeDiff#0",
        "0",
        "\"poolActive\""
      ]
    },
    "513": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "timeDiff#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "514": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "timeDiff#0",
        "maybe_value%0#0"
      ]
    },
    "515": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "timeDiff#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "516": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "timeDiff#0",
        "tmp%0#0"
      ]
    },
    "517": {
      "op": "assert",
      "stack_out": [
        "timeDiff#0"
      ]
    },
    "518": {
      "op": "global LatestTimestamp"
    },
    "520": {
      "op": "dup"
    },
    "521": {
      "op": "intc_0 // 0"
    },
    "522": {
      "op": "bytec_3 // \"lastUpdateTime\"",
      "defined_out": [
        "\"lastUpdateTime\"",
        "0",
        "currentTime#0"
      ],
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "currentTime#0",
        "0",
        "\"lastUpdateTime\""
      ]
    },
    "523": {
      "op": "app_global_get_ex",
      "defined_out": [
        "currentTime#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "currentTime#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "524": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "currentTime#0",
        "maybe_value%1#0"
      ]
    },
    "525": {
      "op": ">",
      "defined_out": [
        "currentTime#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "tmp%1#0"
      ]
    },
    "526": {
      "op": "bz updatePool_ternary_false@2",
      "stack_out": [
        "timeDiff#0",
        "currentTime#0"
      ]
    },
    "529": {
      "op": "intc_0 // 0",
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "0"
      ]
    },
    "530": {
      "op": "bytec_3 // \"lastUpdateTime\"",
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "0",
        "\"lastUpdateTime\""
      ]
    },
    "531": {
      "op": "app_global_get_ex",
      "defined_out": [
        "currentTime#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "532": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "maybe_value%2#0"
      ]
    },
    "533": {
      "op": "frame_dig 1",
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "maybe_value%2#0",
        "currentTime#0"
      ]
    },
    "535": {
      "op": "swap",
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "currentTime#0",
        "maybe_value%2#0"
      ]
    },
    "536": {
      "op": "-",
      "defined_out": [
        "currentTime#0",
        "timeDiff#0"
      ],
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "timeDiff#0"
      ]
    },
    "537": {
      "op": "frame_bury 0",
      "defined_out": [
        "currentTime#0",
        "timeDiff#0"
      ],
      "stack_out": [
        "timeDiff#0",
        "currentTime#0"
      ]
    },
    "539": {
      "block": "updatePool_ternary_merge@3",
      "stack_in": [
        "timeDiff#0",
        "currentTime#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "timeDiff#0"
      ],
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "timeDiff#0"
      ]
    },
    "541": {
      "op": "bz updatePool_after_if_else@6",
      "stack_out": [
        "timeDiff#0",
        "currentTime#0"
      ]
    },
    "544": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "timeDiff#0"
      ],
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "0"
      ]
    },
    "545": {
      "op": "bytec_1 // \"totalStaked\"",
      "defined_out": [
        "\"totalStaked\"",
        "0",
        "timeDiff#0"
      ],
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "0",
        "\"totalStaked\""
      ]
    },
    "546": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "timeDiff#0"
      ],
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "547": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "maybe_value%3#0"
      ]
    },
    "548": {
      "op": "bz updatePool_after_if_else@6",
      "stack_out": [
        "timeDiff#0",
        "currentTime#0"
      ]
    },
    "551": {
      "op": "intc_0 // 0",
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "0"
      ]
    },
    "552": {
      "op": "bytec 7 // \"rewardRate\"",
      "defined_out": [
        "\"rewardRate\"",
        "0",
        "timeDiff#0"
      ],
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "0",
        "\"rewardRate\""
      ]
    },
    "554": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "timeDiff#0"
      ],
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "555": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "maybe_value%4#0"
      ]
    },
    "556": {
      "op": "frame_dig 0",
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "maybe_value%4#0",
        "timeDiff#0"
      ]
    },
    "558": {
      "op": "*",
      "defined_out": [
        "reward#0",
        "timeDiff#0"
      ],
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "reward#0"
      ]
    },
    "559": {
      "op": "intc_0 // 0",
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "reward#0",
        "0"
      ]
    },
    "560": {
      "op": "bytec_0 // \"accRewardPerShare\"",
      "defined_out": [
        "\"accRewardPerShare\"",
        "0",
        "reward#0",
        "timeDiff#0"
      ],
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "reward#0",
        "0",
        "\"accRewardPerShare\""
      ]
    },
    "561": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "reward#0",
        "timeDiff#0"
      ],
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "reward#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "562": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "reward#0",
        "maybe_value%5#0"
      ]
    },
    "563": {
      "op": "swap",
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "maybe_value%5#0",
        "reward#0"
      ]
    },
    "564": {
      "op": "intc_2 // 1000000000000",
      "defined_out": [
        "1000000000000",
        "maybe_value%5#0",
        "reward#0",
        "timeDiff#0"
      ],
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "maybe_value%5#0",
        "reward#0",
        "1000000000000"
      ]
    },
    "565": {
      "op": "*",
      "defined_out": [
        "maybe_value%5#0",
        "timeDiff#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "maybe_value%5#0",
        "tmp%4#0"
      ]
    },
    "566": {
      "op": "intc_0 // 0",
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "maybe_value%5#0",
        "tmp%4#0",
        "0"
      ]
    },
    "567": {
      "op": "bytec_1 // \"totalStaked\"",
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "maybe_value%5#0",
        "tmp%4#0",
        "0",
        "\"totalStaked\""
      ]
    },
    "568": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "timeDiff#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "maybe_value%5#0",
        "tmp%4#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "569": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "maybe_value%5#0",
        "tmp%4#0",
        "maybe_value%6#0"
      ]
    },
    "570": {
      "op": "/",
      "defined_out": [
        "maybe_value%5#0",
        "timeDiff#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "maybe_value%5#0",
        "tmp%5#0"
      ]
    },
    "571": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0",
        "timeDiff#0"
      ],
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "new_state_value%0#0"
      ]
    },
    "572": {
      "op": "bytec_0 // \"accRewardPerShare\"",
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "new_state_value%0#0",
        "\"accRewardPerShare\""
      ]
    },
    "573": {
      "op": "swap",
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "\"accRewardPerShare\"",
        "new_state_value%0#0"
      ]
    },
    "574": {
      "op": "app_global_put",
      "stack_out": [
        "timeDiff#0",
        "currentTime#0"
      ]
    },
    "575": {
      "block": "updatePool_after_if_else@6",
      "stack_in": [
        "timeDiff#0",
        "currentTime#0"
      ],
      "op": "bytec_3 // \"lastUpdateTime\"",
      "defined_out": [
        "\"lastUpdateTime\""
      ],
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "\"lastUpdateTime\""
      ]
    },
    "576": {
      "op": "frame_dig 1",
      "defined_out": [
        "\"lastUpdateTime\"",
        "currentTime#0"
      ],
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "\"lastUpdateTime\"",
        "currentTime#0"
      ]
    },
    "578": {
      "op": "app_global_put",
      "stack_out": [
        "timeDiff#0",
        "currentTime#0"
      ]
    },
    "579": {
      "retsub": true,
      "op": "retsub"
    },
    "580": {
      "block": "updatePool_ternary_false@2",
      "stack_in": [
        "timeDiff#0",
        "currentTime#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "timeDiff#0"
      ],
      "stack_out": [
        "timeDiff#0",
        "currentTime#0",
        "timeDiff#0"
      ]
    },
    "581": {
      "op": "frame_bury 0",
      "defined_out": [
        "timeDiff#0"
      ],
      "stack_out": [
        "timeDiff#0",
        "currentTime#0"
      ]
    },
    "583": {
      "op": "b updatePool_ternary_merge@3"
    },
    "586": {
      "subroutine": "smart_contracts/vault/staking_pool.algo.ts::StakingPool.stake",
      "params": {
        "payment#0": "uint64"
      },
      "block": "stake",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "589": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "amount#0"
      ]
    },
    "591": {
      "op": "dupn 2",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0"
      ]
    },
    "593": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "0"
      ]
    },
    "594": {
      "op": "bytec_2 // \"poolActive\"",
      "defined_out": [
        "\"poolActive\"",
        "0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "0",
        "\"poolActive\""
      ]
    },
    "595": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "596": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "maybe_value%0#0"
      ]
    },
    "597": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "598": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "tmp%0#0"
      ]
    },
    "599": {
      "op": "assert",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0"
      ]
    },
    "600": {
      "op": "intc_0 // 0",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "0"
      ]
    },
    "601": {
      "op": "bytec 9 // \"emergencyPaused\"",
      "defined_out": [
        "\"emergencyPaused\"",
        "0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "0",
        "\"emergencyPaused\""
      ]
    },
    "603": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "604": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "maybe_value%1#0"
      ]
    },
    "605": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "tmp%1#0"
      ]
    },
    "606": {
      "op": "assert",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0"
      ]
    },
    "607": {
      "op": "intc_0 // 0",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "0"
      ]
    },
    "608": {
      "op": "bytec 10 // \"minimumStake\"",
      "defined_out": [
        "\"minimumStake\"",
        "0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "0",
        "\"minimumStake\""
      ]
    },
    "610": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "611": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "maybe_value%2#0"
      ]
    },
    "612": {
      "op": "frame_dig -1",
      "defined_out": [
        "maybe_value%2#0",
        "payment#0 (copy)"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "maybe_value%2#0",
        "payment#0 (copy)"
      ]
    },
    "614": {
      "op": "<=",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "tmp%2#0"
      ]
    },
    "615": {
      "op": "assert",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0"
      ]
    },
    "616": {
      "callsub": "smart_contracts/vault/staking_pool.algo.ts::StakingPool.updatePool",
      "op": "callsub updatePool"
    },
    "619": {
      "op": "txn Sender",
      "defined_out": [
        "userKey#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "userKey#0"
      ]
    },
    "621": {
      "op": "dup",
      "defined_out": [
        "userKey#0",
        "userKey#0 (copy)"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "userKey#0 (copy)"
      ]
    },
    "622": {
      "op": "bytec 4 // \"_amount\"",
      "defined_out": [
        "\"_amount\"",
        "userKey#0",
        "userKey#0 (copy)"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "userKey#0 (copy)",
        "\"_amount\""
      ]
    },
    "624": {
      "op": "concat",
      "defined_out": [
        "amountBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "amountBox#0"
      ]
    },
    "625": {
      "op": "dup",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "amountBox#0 (copy)"
      ]
    },
    "626": {
      "op": "uncover 2",
      "defined_out": [
        "amountBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "amountBox#0",
        "userKey#0"
      ]
    },
    "628": {
      "op": "dup",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "amountBox#0",
        "userKey#0",
        "userKey#0 (copy)"
      ]
    },
    "629": {
      "op": "bytec 5 // \"_rewardDebt\"",
      "defined_out": [
        "\"_rewardDebt\"",
        "amountBox#0",
        "userKey#0",
        "userKey#0 (copy)"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "amountBox#0",
        "userKey#0",
        "userKey#0 (copy)",
        "\"_rewardDebt\""
      ]
    },
    "631": {
      "op": "concat",
      "defined_out": [
        "amountBox#0",
        "rewardDebtBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "amountBox#0",
        "userKey#0",
        "rewardDebtBox#0"
      ]
    },
    "632": {
      "op": "cover 2",
      "defined_out": [
        "amountBox#0",
        "rewardDebtBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "amountBox#0",
        "userKey#0"
      ]
    },
    "634": {
      "op": "bytec 8 // \"_lastStakeTime\"",
      "defined_out": [
        "\"_lastStakeTime\"",
        "amountBox#0",
        "rewardDebtBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "amountBox#0",
        "userKey#0",
        "\"_lastStakeTime\""
      ]
    },
    "636": {
      "op": "concat",
      "defined_out": [
        "amountBox#0",
        "lastStakeTimeBox#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "amountBox#0",
        "lastStakeTimeBox#0"
      ]
    },
    "637": {
      "op": "swap",
      "defined_out": [
        "amountBox#0",
        "lastStakeTimeBox#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "amountBox#0"
      ]
    },
    "638": {
      "op": "box_len",
      "defined_out": [
        "amountBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "639": {
      "op": "bury 1",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%3#0"
      ]
    },
    "641": {
      "op": "bz stake_ternary_false@2",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ]
    },
    "644": {
      "op": "frame_dig 3",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "amountBox#0"
      ]
    },
    "646": {
      "op": "box_get",
      "defined_out": [
        "amountBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "647": {
      "op": "swap",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ]
    },
    "648": {
      "op": "btoi",
      "defined_out": [
        "amountBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%4#0",
        "maybe_value_converted%0#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%4#0",
        "maybe_value_converted%0#0"
      ]
    },
    "649": {
      "op": "swap",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_value_converted%0#0",
        "maybe_exists%4#0"
      ]
    },
    "650": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "defined_out": [
        "amount#0",
        "amountBox#0",
        "lastStakeTimeBox#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "amount#0"
      ]
    },
    "651": {
      "op": "frame_bury 0",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ]
    },
    "653": {
      "block": "stake_ternary_merge@3",
      "stack_in": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "rewardDebtBox#0"
      ]
    },
    "655": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "656": {
      "op": "bury 1",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%5#0"
      ]
    },
    "658": {
      "op": "bz stake_ternary_false@5",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ]
    },
    "661": {
      "op": "frame_dig 4",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "rewardDebtBox#0"
      ]
    },
    "663": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "664": {
      "op": "swap",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%6#0",
        "maybe_value%6#0"
      ]
    },
    "665": {
      "op": "btoi",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value_converted%1#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%6#0",
        "maybe_value_converted%1#0"
      ]
    },
    "666": {
      "op": "swap",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_value_converted%1#0",
        "maybe_exists%6#0"
      ]
    },
    "667": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "defined_out": [
        "rewardDebt#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "rewardDebt#0"
      ]
    },
    "668": {
      "op": "frame_bury 2",
      "defined_out": [
        "rewardDebt#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ]
    },
    "670": {
      "block": "stake_ternary_merge@6",
      "stack_in": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "0"
      ]
    },
    "671": {
      "op": "bytec_0 // \"accRewardPerShare\"",
      "defined_out": [
        "\"accRewardPerShare\"",
        "0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "0",
        "\"accRewardPerShare\""
      ]
    },
    "672": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%7#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "673": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_value%7#0"
      ]
    },
    "674": {
      "op": "frame_dig 0",
      "defined_out": [
        "amount#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_value%7#0",
        "amount#0"
      ]
    },
    "676": {
      "op": "*",
      "defined_out": [
        "amount#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "tmp%3#0"
      ]
    },
    "677": {
      "op": "intc_2 // 1000000000000",
      "defined_out": [
        "1000000000000",
        "amount#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "tmp%3#0",
        "1000000000000"
      ]
    },
    "678": {
      "op": "/",
      "defined_out": [
        "amount#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "tmp%4#0"
      ]
    },
    "679": {
      "op": "frame_dig 2",
      "defined_out": [
        "amount#0",
        "rewardDebt#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "tmp%4#0",
        "rewardDebt#0"
      ]
    },
    "681": {
      "op": ">",
      "defined_out": [
        "amount#0",
        "rewardDebt#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "tmp%5#0"
      ]
    },
    "682": {
      "op": "bz stake_ternary_false@8",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ]
    },
    "685": {
      "op": "intc_0 // 0",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "0"
      ]
    },
    "686": {
      "op": "bytec_0 // \"accRewardPerShare\"",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "0",
        "\"accRewardPerShare\""
      ]
    },
    "687": {
      "op": "app_global_get_ex",
      "defined_out": [
        "amount#0",
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "rewardDebt#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "688": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_value%8#0"
      ]
    },
    "689": {
      "op": "frame_dig 0",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_value%8#0",
        "amount#0"
      ]
    },
    "691": {
      "op": "*",
      "defined_out": [
        "amount#0",
        "rewardDebt#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "tmp%6#0"
      ]
    },
    "692": {
      "op": "intc_2 // 1000000000000",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "tmp%6#0",
        "1000000000000"
      ]
    },
    "693": {
      "op": "/",
      "defined_out": [
        "amount#0",
        "rewardDebt#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "tmp%7#0"
      ]
    },
    "694": {
      "op": "frame_dig 2",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "tmp%7#0",
        "rewardDebt#0"
      ]
    },
    "696": {
      "op": "-",
      "defined_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "pending#0"
      ]
    },
    "697": {
      "op": "frame_bury 1",
      "defined_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ]
    },
    "699": {
      "block": "stake_ternary_merge@9",
      "stack_in": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "pending#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "pending#0"
      ]
    },
    "701": {
      "op": "bz stake_after_if_else@12",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ]
    },
    "704": {
      "op": "itxn_begin"
    },
    "705": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "pending#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "707": {
      "op": "frame_dig 1",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "pending#0"
      ]
    },
    "709": {
      "op": "itxn_field Amount",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "711": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ]
    },
    "713": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "pending#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "1"
      ]
    },
    "714": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ]
    },
    "716": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "pending#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "0"
      ]
    },
    "717": {
      "op": "itxn_field Fee",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ]
    },
    "719": {
      "op": "itxn_submit"
    },
    "720": {
      "block": "stake_after_if_else@12",
      "stack_in": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "amount#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "amount#0"
      ]
    },
    "722": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0",
        "payment#0 (copy)"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "amount#0",
        "payment#0 (copy)"
      ]
    },
    "724": {
      "op": "+",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "amount#0"
      ]
    },
    "725": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "amount#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "amount#0",
        "0"
      ]
    },
    "726": {
      "op": "bytec_0 // \"accRewardPerShare\"",
      "defined_out": [
        "\"accRewardPerShare\"",
        "0",
        "amount#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "amount#0",
        "0",
        "\"accRewardPerShare\""
      ]
    },
    "727": {
      "op": "app_global_get_ex",
      "defined_out": [
        "amount#0",
        "maybe_exists%9#0",
        "maybe_value%9#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "amount#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "728": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "amount#0",
        "maybe_value%9#0"
      ]
    },
    "729": {
      "op": "dig 1",
      "defined_out": [
        "amount#0",
        "amount#0 (copy)",
        "maybe_value%9#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "amount#0",
        "maybe_value%9#0",
        "amount#0 (copy)"
      ]
    },
    "731": {
      "op": "*",
      "defined_out": [
        "amount#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "amount#0",
        "tmp%9#0"
      ]
    },
    "732": {
      "op": "intc_2 // 1000000000000",
      "defined_out": [
        "1000000000000",
        "amount#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "amount#0",
        "tmp%9#0",
        "1000000000000"
      ]
    },
    "733": {
      "op": "/",
      "defined_out": [
        "amount#0",
        "rewardDebt#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "amount#0",
        "rewardDebt#0"
      ]
    },
    "734": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "amount#0",
        "now#0",
        "rewardDebt#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "amount#0",
        "rewardDebt#0",
        "now#0"
      ]
    },
    "736": {
      "op": "uncover 2",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "rewardDebt#0",
        "now#0",
        "amount#0"
      ]
    },
    "738": {
      "op": "itob",
      "defined_out": [
        "amount#0",
        "new_box_value%0#0",
        "now#0",
        "rewardDebt#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "rewardDebt#0",
        "now#0",
        "new_box_value%0#0"
      ]
    },
    "739": {
      "op": "frame_dig 3",
      "defined_out": [
        "amount#0",
        "amountBox#0",
        "new_box_value%0#0",
        "now#0",
        "rewardDebt#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "rewardDebt#0",
        "now#0",
        "new_box_value%0#0",
        "amountBox#0"
      ]
    },
    "741": {
      "op": "swap",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "rewardDebt#0",
        "now#0",
        "amountBox#0",
        "new_box_value%0#0"
      ]
    },
    "742": {
      "op": "box_put",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "rewardDebt#0",
        "now#0"
      ]
    },
    "743": {
      "op": "swap",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "now#0",
        "rewardDebt#0"
      ]
    },
    "744": {
      "op": "itob",
      "defined_out": [
        "amount#0",
        "amountBox#0",
        "new_box_value%1#0",
        "now#0",
        "rewardDebt#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "now#0",
        "new_box_value%1#0"
      ]
    },
    "745": {
      "op": "frame_dig 4",
      "defined_out": [
        "amount#0",
        "amountBox#0",
        "new_box_value%1#0",
        "now#0",
        "rewardDebt#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "now#0",
        "new_box_value%1#0",
        "rewardDebtBox#0"
      ]
    },
    "747": {
      "op": "swap",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "now#0",
        "rewardDebtBox#0",
        "new_box_value%1#0"
      ]
    },
    "748": {
      "op": "box_put",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "now#0"
      ]
    },
    "749": {
      "op": "itob",
      "defined_out": [
        "amount#0",
        "amountBox#0",
        "new_box_value%2#0",
        "rewardDebt#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "new_box_value%2#0"
      ]
    },
    "750": {
      "op": "frame_dig 5",
      "defined_out": [
        "amount#0",
        "amountBox#0",
        "lastStakeTimeBox#0",
        "new_box_value%2#0",
        "rewardDebt#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "new_box_value%2#0",
        "lastStakeTimeBox#0"
      ]
    },
    "752": {
      "op": "swap",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "lastStakeTimeBox#0",
        "new_box_value%2#0"
      ]
    },
    "753": {
      "op": "box_put",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ]
    },
    "754": {
      "op": "intc_0 // 0",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "0"
      ]
    },
    "755": {
      "op": "bytec_1 // \"totalStaked\"",
      "defined_out": [
        "\"totalStaked\"",
        "0",
        "amount#0",
        "amountBox#0",
        "lastStakeTimeBox#0",
        "rewardDebt#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "0",
        "\"totalStaked\""
      ]
    },
    "756": {
      "op": "app_global_get_ex",
      "defined_out": [
        "amount#0",
        "amountBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%10#0",
        "maybe_value%10#0",
        "rewardDebt#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "757": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_value%10#0"
      ]
    },
    "758": {
      "op": "frame_dig -1",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_value%10#0",
        "payment#0 (copy)"
      ]
    },
    "760": {
      "op": "+",
      "defined_out": [
        "amount#0",
        "amountBox#0",
        "lastStakeTimeBox#0",
        "new_state_value%0#0",
        "rewardDebt#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "new_state_value%0#0"
      ]
    },
    "761": {
      "op": "bytec_1 // \"totalStaked\"",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "new_state_value%0#0",
        "\"totalStaked\""
      ]
    },
    "762": {
      "op": "swap",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "\"totalStaked\"",
        "new_state_value%0#0"
      ]
    },
    "763": {
      "op": "app_global_put",
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ]
    },
    "764": {
      "retsub": true,
      "op": "retsub"
    },
    "765": {
      "block": "stake_ternary_false@8",
      "stack_in": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "pending#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "pending#0"
      ]
    },
    "766": {
      "op": "frame_bury 1",
      "defined_out": [
        "pending#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ]
    },
    "768": {
      "op": "b stake_ternary_merge@9"
    },
    "771": {
      "block": "stake_ternary_false@5",
      "stack_in": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "rewardDebt#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "rewardDebt#0"
      ]
    },
    "772": {
      "op": "frame_bury 2",
      "defined_out": [
        "rewardDebt#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ]
    },
    "774": {
      "op": "b stake_ternary_merge@6"
    },
    "777": {
      "block": "stake_ternary_false@2",
      "stack_in": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "amount#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "amount#0"
      ]
    },
    "778": {
      "op": "frame_bury 0",
      "defined_out": [
        "amount#0"
      ],
      "stack_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ]
    },
    "780": {
      "op": "b stake_ternary_merge@3"
    },
    "783": {
      "subroutine": "smart_contracts/vault/staking_pool.algo.ts::StakingPool.withdraw",
      "params": {
        "amount#0": "uint64"
      },
      "block": "withdraw",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "786": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "pending#0"
      ]
    },
    "788": {
      "op": "dup",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0"
      ]
    },
    "789": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "0"
      ]
    },
    "790": {
      "op": "bytec_2 // \"poolActive\"",
      "defined_out": [
        "\"poolActive\"",
        "0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "0",
        "\"poolActive\""
      ]
    },
    "791": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "792": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "maybe_value%0#0"
      ]
    },
    "793": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "794": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "tmp%0#0"
      ]
    },
    "795": {
      "op": "assert",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0"
      ]
    },
    "796": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "amount#0 (copy)"
      ]
    },
    "798": {
      "op": "assert",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0"
      ]
    },
    "799": {
      "callsub": "smart_contracts/vault/staking_pool.algo.ts::StakingPool.updatePool",
      "op": "callsub updatePool"
    },
    "802": {
      "op": "txn Sender"
    },
    "804": {
      "op": "dupn 2",
      "defined_out": [
        "userKey#0",
        "userKey#0 (copy)"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "userKey#0",
        "userKey#0 (copy)"
      ]
    },
    "806": {
      "op": "bytec 4 // \"_amount\"",
      "defined_out": [
        "\"_amount\"",
        "userKey#0",
        "userKey#0 (copy)"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "userKey#0",
        "userKey#0 (copy)",
        "\"_amount\""
      ]
    },
    "808": {
      "op": "concat",
      "defined_out": [
        "amountBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "userKey#0",
        "amountBox#0"
      ]
    },
    "809": {
      "op": "dup",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "userKey#0",
        "amountBox#0",
        "amountBox#0 (copy)"
      ]
    },
    "810": {
      "op": "uncover 2",
      "defined_out": [
        "amountBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "amountBox#0",
        "userKey#0"
      ]
    },
    "812": {
      "op": "dup",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "amountBox#0",
        "userKey#0",
        "userKey#0 (copy)"
      ]
    },
    "813": {
      "op": "bytec 5 // \"_rewardDebt\"",
      "defined_out": [
        "\"_rewardDebt\"",
        "amountBox#0",
        "userKey#0",
        "userKey#0 (copy)"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "amountBox#0",
        "userKey#0",
        "userKey#0 (copy)",
        "\"_rewardDebt\""
      ]
    },
    "815": {
      "op": "concat",
      "defined_out": [
        "amountBox#0",
        "rewardDebtBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "amountBox#0",
        "userKey#0",
        "rewardDebtBox#0"
      ]
    },
    "816": {
      "op": "dup",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "amountBox#0",
        "userKey#0",
        "rewardDebtBox#0",
        "rewardDebtBox#0 (copy)"
      ]
    },
    "817": {
      "op": "cover 3",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "amountBox#0",
        "userKey#0",
        "rewardDebtBox#0"
      ]
    },
    "819": {
      "op": "cover 3",
      "defined_out": [
        "amountBox#0",
        "rewardDebtBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "rewardDebtBox#0",
        "amountBox#0",
        "userKey#0"
      ]
    },
    "821": {
      "op": "bytec 8 // \"_lastStakeTime\"",
      "defined_out": [
        "\"_lastStakeTime\"",
        "amountBox#0",
        "rewardDebtBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "rewardDebtBox#0",
        "amountBox#0",
        "userKey#0",
        "\"_lastStakeTime\""
      ]
    },
    "823": {
      "op": "concat",
      "defined_out": [
        "amountBox#0",
        "lastStakeTimeBox#0",
        "rewardDebtBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "rewardDebtBox#0",
        "amountBox#0",
        "lastStakeTimeBox#0"
      ]
    },
    "824": {
      "op": "cover 2",
      "defined_out": [
        "amountBox#0",
        "lastStakeTimeBox#0",
        "rewardDebtBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "rewardDebtBox#0",
        "amountBox#0"
      ]
    },
    "826": {
      "op": "dup",
      "defined_out": [
        "amountBox#0",
        "amountBox#0 (copy)",
        "lastStakeTimeBox#0",
        "rewardDebtBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "rewardDebtBox#0",
        "amountBox#0",
        "amountBox#0 (copy)"
      ]
    },
    "827": {
      "op": "box_len",
      "defined_out": [
        "amountBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "rewardDebtBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "rewardDebtBox#0",
        "amountBox#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "828": {
      "op": "bury 1",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "rewardDebtBox#0",
        "amountBox#0",
        "maybe_exists%1#0"
      ]
    },
    "830": {
      "op": "assert",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "rewardDebtBox#0",
        "amountBox#0"
      ]
    },
    "831": {
      "op": "box_get",
      "defined_out": [
        "amountBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "rewardDebtBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "rewardDebtBox#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "832": {
      "op": "swap",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "rewardDebtBox#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ]
    },
    "833": {
      "op": "btoi",
      "defined_out": [
        "amountBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%2#0",
        "rewardDebtBox#0",
        "userAmount#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "rewardDebtBox#0",
        "maybe_exists%2#0",
        "userAmount#0"
      ]
    },
    "834": {
      "op": "cover 2",
      "defined_out": [
        "amountBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%2#0",
        "rewardDebtBox#0",
        "userAmount#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "rewardDebtBox#0",
        "maybe_exists%2#0"
      ]
    },
    "836": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "rewardDebtBox#0"
      ]
    },
    "837": {
      "op": "box_len",
      "defined_out": [
        "amountBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "rewardDebtBox#0",
        "userAmount#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "838": {
      "op": "bury 1",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "maybe_exists%3#0"
      ]
    },
    "840": {
      "op": "bz withdraw_ternary_false@2",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ]
    },
    "843": {
      "op": "frame_dig 4",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "rewardDebtBox#0"
      ]
    },
    "845": {
      "op": "box_get",
      "defined_out": [
        "amountBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "rewardDebtBox#0",
        "userAmount#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "846": {
      "op": "swap",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ]
    },
    "847": {
      "op": "btoi",
      "defined_out": [
        "amountBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%4#0",
        "maybe_value_converted%1#0",
        "rewardDebtBox#0",
        "userAmount#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "maybe_exists%4#0",
        "maybe_value_converted%1#0"
      ]
    },
    "848": {
      "op": "swap",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "maybe_value_converted%1#0",
        "maybe_exists%4#0"
      ]
    },
    "849": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "defined_out": [
        "amountBox#0",
        "lastStakeTimeBox#0",
        "rewardDebtBox#0",
        "userAmount#0",
        "userKey#0",
        "userRewardDebt#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userRewardDebt#0"
      ]
    },
    "850": {
      "op": "frame_bury 1",
      "defined_out": [
        "amountBox#0",
        "lastStakeTimeBox#0",
        "rewardDebtBox#0",
        "userAmount#0",
        "userKey#0",
        "userRewardDebt#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ]
    },
    "852": {
      "block": "withdraw_ternary_merge@3",
      "stack_in": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "userAmount#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userAmount#0"
      ]
    },
    "854": {
      "op": "dup",
      "defined_out": [
        "userAmount#0",
        "userAmount#0 (copy)"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userAmount#0",
        "userAmount#0 (copy)"
      ]
    },
    "855": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)",
        "userAmount#0",
        "userAmount#0 (copy)"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userAmount#0",
        "userAmount#0 (copy)",
        "amount#0 (copy)"
      ]
    },
    "857": {
      "op": ">=",
      "defined_out": [
        "tmp%2#0",
        "userAmount#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userAmount#0",
        "tmp%2#0"
      ]
    },
    "858": {
      "op": "assert",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userAmount#0"
      ]
    },
    "859": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "userAmount#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userAmount#0",
        "0"
      ]
    },
    "860": {
      "op": "bytec_0 // \"accRewardPerShare\"",
      "defined_out": [
        "\"accRewardPerShare\"",
        "0",
        "userAmount#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userAmount#0",
        "0",
        "\"accRewardPerShare\""
      ]
    },
    "861": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "userAmount#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userAmount#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "862": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userAmount#0",
        "maybe_value%5#0"
      ]
    },
    "863": {
      "op": "*",
      "defined_out": [
        "tmp%3#0",
        "userAmount#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "tmp%3#0"
      ]
    },
    "864": {
      "op": "intc_2 // 1000000000000",
      "defined_out": [
        "1000000000000",
        "tmp%3#0",
        "userAmount#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "tmp%3#0",
        "1000000000000"
      ]
    },
    "865": {
      "op": "/",
      "defined_out": [
        "tmp%4#0",
        "userAmount#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "tmp%4#0"
      ]
    },
    "866": {
      "op": "frame_dig 1",
      "defined_out": [
        "tmp%4#0",
        "userAmount#0",
        "userRewardDebt#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "tmp%4#0",
        "userRewardDebt#0"
      ]
    },
    "868": {
      "op": ">",
      "defined_out": [
        "tmp%5#0",
        "userAmount#0",
        "userRewardDebt#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "tmp%5#0"
      ]
    },
    "869": {
      "op": "bz withdraw_ternary_false@5",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ]
    },
    "872": {
      "op": "intc_0 // 0",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "0"
      ]
    },
    "873": {
      "op": "bytec_0 // \"accRewardPerShare\"",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "0",
        "\"accRewardPerShare\""
      ]
    },
    "874": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "userAmount#0",
        "userRewardDebt#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "875": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "maybe_value%6#0"
      ]
    },
    "876": {
      "op": "frame_dig 6",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "maybe_value%6#0",
        "userAmount#0"
      ]
    },
    "878": {
      "op": "*",
      "defined_out": [
        "tmp%6#0",
        "userAmount#0",
        "userRewardDebt#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "tmp%6#0"
      ]
    },
    "879": {
      "op": "intc_2 // 1000000000000",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "tmp%6#0",
        "1000000000000"
      ]
    },
    "880": {
      "op": "/",
      "defined_out": [
        "tmp%7#0",
        "userAmount#0",
        "userRewardDebt#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "tmp%7#0"
      ]
    },
    "881": {
      "op": "frame_dig 1",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "tmp%7#0",
        "userRewardDebt#0"
      ]
    },
    "883": {
      "op": "-",
      "defined_out": [
        "pending#0",
        "userAmount#0",
        "userRewardDebt#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "pending#0"
      ]
    },
    "884": {
      "op": "frame_bury 0",
      "defined_out": [
        "pending#0",
        "userAmount#0",
        "userRewardDebt#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ]
    },
    "886": {
      "block": "withdraw_ternary_merge@6",
      "stack_in": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "userAmount#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userAmount#0"
      ]
    },
    "888": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)",
        "userAmount#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userAmount#0",
        "amount#0 (copy)"
      ]
    },
    "890": {
      "op": "-",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userAmount#0"
      ]
    },
    "891": {
      "op": "dup",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userAmount#0",
        "userAmount#0"
      ]
    },
    "892": {
      "op": "frame_bury 6",
      "defined_out": [
        "userAmount#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userAmount#0"
      ]
    },
    "894": {
      "op": "intc_0 // 0",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userAmount#0",
        "0"
      ]
    },
    "895": {
      "op": "bytec_0 // \"accRewardPerShare\"",
      "defined_out": [
        "\"accRewardPerShare\"",
        "0",
        "userAmount#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userAmount#0",
        "0",
        "\"accRewardPerShare\""
      ]
    },
    "896": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%7#0",
        "maybe_value%7#0",
        "userAmount#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userAmount#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "897": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userAmount#0",
        "maybe_value%7#0"
      ]
    },
    "898": {
      "op": "dig 1",
      "defined_out": [
        "maybe_value%7#0",
        "userAmount#0",
        "userAmount#0 (copy)"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userAmount#0",
        "maybe_value%7#0",
        "userAmount#0 (copy)"
      ]
    },
    "900": {
      "op": "*",
      "defined_out": [
        "tmp%8#0",
        "userAmount#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userAmount#0",
        "tmp%8#0"
      ]
    },
    "901": {
      "op": "intc_2 // 1000000000000",
      "defined_out": [
        "1000000000000",
        "tmp%8#0",
        "userAmount#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userAmount#0",
        "tmp%8#0",
        "1000000000000"
      ]
    },
    "902": {
      "op": "/",
      "defined_out": [
        "userAmount#0",
        "userRewardDebt#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userAmount#0",
        "userRewardDebt#0"
      ]
    },
    "903": {
      "op": "frame_bury 1",
      "defined_out": [
        "userAmount#0",
        "userRewardDebt#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userAmount#0"
      ]
    },
    "905": {
      "op": "bnz withdraw_else_body@8",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ]
    },
    "908": {
      "op": "frame_dig 3",
      "defined_out": [
        "amountBox#0",
        "userAmount#0",
        "userRewardDebt#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "amountBox#0"
      ]
    },
    "910": {
      "op": "box_del",
      "defined_out": [
        "amountBox#0",
        "userAmount#0",
        "userRewardDebt#0",
        "{box_del}"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "{box_del}"
      ]
    },
    "911": {
      "op": "pop",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ]
    },
    "912": {
      "op": "frame_dig 4",
      "defined_out": [
        "amountBox#0",
        "rewardDebtBox#0",
        "userAmount#0",
        "userRewardDebt#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "rewardDebtBox#0"
      ]
    },
    "914": {
      "op": "box_del",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "{box_del}"
      ]
    },
    "915": {
      "op": "pop",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ]
    },
    "916": {
      "op": "frame_dig 5",
      "defined_out": [
        "amountBox#0",
        "lastStakeTimeBox#0",
        "rewardDebtBox#0",
        "userAmount#0",
        "userRewardDebt#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "lastStakeTimeBox#0"
      ]
    },
    "918": {
      "op": "box_del",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "{box_del}"
      ]
    },
    "919": {
      "op": "pop",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ]
    },
    "920": {
      "block": "withdraw_after_if_else@9",
      "stack_in": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "0"
      ]
    },
    "921": {
      "op": "bytec_1 // \"totalStaked\"",
      "defined_out": [
        "\"totalStaked\"",
        "0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "0",
        "\"totalStaked\""
      ]
    },
    "922": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%8#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "923": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "maybe_value%8#0"
      ]
    },
    "924": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "maybe_value%8#0",
        "amount#0 (copy)"
      ]
    },
    "926": {
      "op": "-",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "new_state_value%0#0"
      ]
    },
    "927": {
      "op": "bytec_1 // \"totalStaked\"",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "new_state_value%0#0",
        "\"totalStaked\""
      ]
    },
    "928": {
      "op": "swap",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "\"totalStaked\"",
        "new_state_value%0#0"
      ]
    },
    "929": {
      "op": "app_global_put",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ]
    },
    "930": {
      "op": "itxn_begin"
    },
    "931": {
      "op": "frame_dig -1",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "amount#0 (copy)"
      ]
    },
    "933": {
      "op": "itxn_field Amount",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ]
    },
    "935": {
      "op": "frame_dig 2",
      "defined_out": [
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userKey#0"
      ]
    },
    "937": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ]
    },
    "939": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "1"
      ]
    },
    "940": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ]
    },
    "942": {
      "op": "intc_0 // 0",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "0"
      ]
    },
    "943": {
      "op": "itxn_field Fee",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ]
    },
    "945": {
      "op": "itxn_submit"
    },
    "946": {
      "op": "frame_dig 0",
      "defined_out": [
        "pending#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "pending#0"
      ]
    },
    "948": {
      "op": "bz withdraw_after_if_else@13",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ]
    },
    "951": {
      "op": "itxn_begin"
    },
    "952": {
      "op": "frame_dig 0",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "pending#0"
      ]
    },
    "954": {
      "op": "itxn_field Amount",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ]
    },
    "956": {
      "op": "frame_dig 2",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userKey#0"
      ]
    },
    "958": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ]
    },
    "960": {
      "op": "intc_1 // 1",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "1"
      ]
    },
    "961": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ]
    },
    "963": {
      "op": "intc_0 // 0",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "0"
      ]
    },
    "964": {
      "op": "itxn_field Fee",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ]
    },
    "966": {
      "op": "itxn_submit"
    },
    "967": {
      "block": "withdraw_after_if_else@13",
      "stack_in": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "968": {
      "block": "withdraw_else_body@8",
      "stack_in": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "userAmount#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userAmount#0"
      ]
    },
    "970": {
      "op": "itob",
      "defined_out": [
        "new_box_value%0#0",
        "userAmount#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "new_box_value%0#0"
      ]
    },
    "971": {
      "op": "frame_dig 3",
      "defined_out": [
        "amountBox#0",
        "new_box_value%0#0",
        "userAmount#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "new_box_value%0#0",
        "amountBox#0"
      ]
    },
    "973": {
      "op": "swap",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "amountBox#0",
        "new_box_value%0#0"
      ]
    },
    "974": {
      "op": "box_put",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ]
    },
    "975": {
      "op": "frame_dig 1",
      "defined_out": [
        "amountBox#0",
        "userAmount#0",
        "userRewardDebt#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userRewardDebt#0"
      ]
    },
    "977": {
      "op": "itob",
      "defined_out": [
        "amountBox#0",
        "new_box_value%1#0",
        "userAmount#0",
        "userRewardDebt#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "new_box_value%1#0"
      ]
    },
    "978": {
      "op": "frame_dig 4",
      "defined_out": [
        "amountBox#0",
        "new_box_value%1#0",
        "rewardDebtBox#0",
        "userAmount#0",
        "userRewardDebt#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "new_box_value%1#0",
        "rewardDebtBox#0"
      ]
    },
    "980": {
      "op": "swap",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "rewardDebtBox#0",
        "new_box_value%1#0"
      ]
    },
    "981": {
      "op": "box_put",
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ]
    },
    "982": {
      "op": "b withdraw_after_if_else@9"
    },
    "985": {
      "block": "withdraw_ternary_false@5",
      "stack_in": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "pending#0"
      ]
    },
    "986": {
      "op": "frame_bury 0",
      "defined_out": [
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ]
    },
    "988": {
      "op": "b withdraw_ternary_merge@6"
    },
    "991": {
      "block": "withdraw_ternary_false@2",
      "stack_in": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "userRewardDebt#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0",
        "userRewardDebt#0"
      ]
    },
    "992": {
      "op": "frame_bury 1",
      "defined_out": [
        "userRewardDebt#0"
      ],
      "stack_out": [
        "pending#0",
        "userRewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "userAmount#0"
      ]
    },
    "994": {
      "op": "b withdraw_ternary_merge@3"
    },
    "997": {
      "subroutine": "smart_contracts/vault/staking_pool.algo.ts::StakingPool.claimRewards",
      "params": {},
      "block": "claimRewards",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "1000": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "pending#0"
      ]
    },
    "1002": {
      "op": "dup",
      "stack_out": [
        "pending#0",
        "rewardDebt#0"
      ]
    },
    "1003": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "0"
      ]
    },
    "1004": {
      "op": "bytec_2 // \"poolActive\"",
      "defined_out": [
        "\"poolActive\"",
        "0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "0",
        "\"poolActive\""
      ]
    },
    "1005": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1006": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "maybe_value%0#0"
      ]
    },
    "1007": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "1008": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "tmp%0#0"
      ]
    },
    "1009": {
      "op": "assert",
      "stack_out": [
        "pending#0",
        "rewardDebt#0"
      ]
    },
    "1010": {
      "callsub": "smart_contracts/vault/staking_pool.algo.ts::StakingPool.updatePool",
      "op": "callsub updatePool"
    },
    "1013": {
      "op": "txn Sender"
    },
    "1015": {
      "op": "dupn 2",
      "defined_out": [
        "userKey#0",
        "userKey#0 (copy)"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "userKey#0",
        "userKey#0 (copy)"
      ]
    },
    "1017": {
      "op": "bytec 4 // \"_amount\"",
      "defined_out": [
        "\"_amount\"",
        "userKey#0",
        "userKey#0 (copy)"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "userKey#0",
        "userKey#0 (copy)",
        "\"_amount\""
      ]
    },
    "1019": {
      "op": "concat",
      "defined_out": [
        "amountBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "userKey#0",
        "amountBox#0"
      ]
    },
    "1020": {
      "op": "swap",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "userKey#0"
      ]
    },
    "1021": {
      "op": "bytec 5 // \"_rewardDebt\"",
      "defined_out": [
        "\"_rewardDebt\"",
        "amountBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "userKey#0",
        "\"_rewardDebt\""
      ]
    },
    "1023": {
      "op": "concat",
      "defined_out": [
        "amountBox#0",
        "rewardDebtBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0"
      ]
    },
    "1024": {
      "op": "dup",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "rewardDebtBox#0 (copy)"
      ]
    },
    "1025": {
      "op": "uncover 2",
      "defined_out": [
        "amountBox#0",
        "rewardDebtBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "rewardDebtBox#0",
        "amountBox#0"
      ]
    },
    "1027": {
      "op": "dup",
      "defined_out": [
        "amountBox#0",
        "amountBox#0 (copy)",
        "rewardDebtBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "rewardDebtBox#0",
        "amountBox#0",
        "amountBox#0 (copy)"
      ]
    },
    "1028": {
      "op": "box_len",
      "defined_out": [
        "amountBox#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "rewardDebtBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "rewardDebtBox#0",
        "amountBox#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1029": {
      "op": "bury 1",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "rewardDebtBox#0",
        "amountBox#0",
        "maybe_exists%1#0"
      ]
    },
    "1031": {
      "op": "assert",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "rewardDebtBox#0",
        "amountBox#0"
      ]
    },
    "1032": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "rewardDebtBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "rewardDebtBox#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1033": {
      "op": "swap",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "rewardDebtBox#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ]
    },
    "1034": {
      "op": "btoi",
      "defined_out": [
        "amount#0",
        "maybe_exists%2#0",
        "rewardDebtBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "rewardDebtBox#0",
        "maybe_exists%2#0",
        "amount#0"
      ]
    },
    "1035": {
      "op": "cover 2",
      "defined_out": [
        "amount#0",
        "maybe_exists%2#0",
        "rewardDebtBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "rewardDebtBox#0",
        "maybe_exists%2#0"
      ]
    },
    "1037": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "rewardDebtBox#0"
      ]
    },
    "1038": {
      "op": "box_len",
      "defined_out": [
        "amount#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "rewardDebtBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1039": {
      "op": "bury 1",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "maybe_exists%3#0"
      ]
    },
    "1041": {
      "op": "bz claimRewards_ternary_false@2",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0"
      ]
    },
    "1044": {
      "op": "frame_dig 3",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "rewardDebtBox#0"
      ]
    },
    "1046": {
      "op": "box_get",
      "defined_out": [
        "amount#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "rewardDebtBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1047": {
      "op": "swap",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ]
    },
    "1048": {
      "op": "btoi",
      "defined_out": [
        "amount#0",
        "maybe_exists%4#0",
        "maybe_value_converted%1#0",
        "rewardDebtBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "maybe_exists%4#0",
        "maybe_value_converted%1#0"
      ]
    },
    "1049": {
      "op": "swap",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "maybe_value_converted%1#0",
        "maybe_exists%4#0"
      ]
    },
    "1050": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "defined_out": [
        "amount#0",
        "rewardDebt#0",
        "rewardDebtBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "rewardDebt#0"
      ]
    },
    "1051": {
      "op": "frame_bury 1",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0"
      ]
    },
    "1053": {
      "block": "claimRewards_ternary_merge@3",
      "stack_in": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "0"
      ]
    },
    "1054": {
      "op": "bytec_0 // \"accRewardPerShare\"",
      "defined_out": [
        "\"accRewardPerShare\"",
        "0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "0",
        "\"accRewardPerShare\""
      ]
    },
    "1055": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1056": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "maybe_value%5#0"
      ]
    },
    "1057": {
      "op": "frame_dig 4",
      "defined_out": [
        "amount#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "maybe_value%5#0",
        "amount#0"
      ]
    },
    "1059": {
      "op": "*",
      "defined_out": [
        "amount#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "tmp%1#0"
      ]
    },
    "1060": {
      "op": "intc_2 // 1000000000000",
      "defined_out": [
        "1000000000000",
        "amount#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "tmp%1#0",
        "1000000000000"
      ]
    },
    "1061": {
      "op": "/",
      "defined_out": [
        "amount#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "tmp%2#0"
      ]
    },
    "1062": {
      "op": "frame_dig 1",
      "defined_out": [
        "amount#0",
        "rewardDebt#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "tmp%2#0",
        "rewardDebt#0"
      ]
    },
    "1064": {
      "op": ">",
      "defined_out": [
        "amount#0",
        "rewardDebt#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "tmp%3#0"
      ]
    },
    "1065": {
      "op": "bz claimRewards_ternary_false@5",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0"
      ]
    },
    "1068": {
      "op": "intc_0 // 0",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "0"
      ]
    },
    "1069": {
      "op": "bytec_0 // \"accRewardPerShare\"",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "0",
        "\"accRewardPerShare\""
      ]
    },
    "1070": {
      "op": "app_global_get_ex",
      "defined_out": [
        "amount#0",
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "rewardDebt#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "1071": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "maybe_value%6#0"
      ]
    },
    "1072": {
      "op": "frame_dig 4",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "maybe_value%6#0",
        "amount#0"
      ]
    },
    "1074": {
      "op": "*",
      "defined_out": [
        "amount#0",
        "rewardDebt#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "tmp%4#0"
      ]
    },
    "1075": {
      "op": "intc_2 // 1000000000000",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "tmp%4#0",
        "1000000000000"
      ]
    },
    "1076": {
      "op": "/",
      "defined_out": [
        "amount#0",
        "rewardDebt#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "tmp%5#0"
      ]
    },
    "1077": {
      "op": "frame_dig 1",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "tmp%5#0",
        "rewardDebt#0"
      ]
    },
    "1079": {
      "op": "-",
      "defined_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "pending#0"
      ]
    },
    "1080": {
      "op": "frame_bury 0",
      "defined_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0"
      ]
    },
    "1082": {
      "block": "claimRewards_ternary_merge@6",
      "stack_in": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "pending#0"
      ]
    },
    "1084": {
      "op": "bz claimRewards_after_if_else@9",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0"
      ]
    },
    "1087": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "0"
      ]
    },
    "1088": {
      "op": "bytec_0 // \"accRewardPerShare\"",
      "defined_out": [
        "\"accRewardPerShare\"",
        "0",
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "0",
        "\"accRewardPerShare\""
      ]
    },
    "1089": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%7#0",
        "maybe_value%7#0",
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "1090": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "maybe_value%7#0"
      ]
    },
    "1091": {
      "op": "frame_dig 4",
      "defined_out": [
        "amount#0",
        "maybe_value%7#0",
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "maybe_value%7#0",
        "amount#0"
      ]
    },
    "1093": {
      "op": "*",
      "defined_out": [
        "amount#0",
        "pending#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "tmp%7#0"
      ]
    },
    "1094": {
      "op": "intc_2 // 1000000000000",
      "defined_out": [
        "1000000000000",
        "amount#0",
        "pending#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "tmp%7#0",
        "1000000000000"
      ]
    },
    "1095": {
      "op": "/",
      "defined_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "rewardDebt#0"
      ]
    },
    "1096": {
      "op": "itob",
      "defined_out": [
        "amount#0",
        "new_box_value%0#0",
        "pending#0",
        "rewardDebt#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "new_box_value%0#0"
      ]
    },
    "1097": {
      "op": "frame_dig 3",
      "defined_out": [
        "amount#0",
        "new_box_value%0#0",
        "pending#0",
        "rewardDebt#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "new_box_value%0#0",
        "rewardDebtBox#0"
      ]
    },
    "1099": {
      "op": "swap",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "rewardDebtBox#0",
        "new_box_value%0#0"
      ]
    },
    "1100": {
      "op": "box_put",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0"
      ]
    },
    "1101": {
      "op": "itxn_begin"
    },
    "1102": {
      "op": "frame_dig 0",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "pending#0"
      ]
    },
    "1104": {
      "op": "itxn_field Amount",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0"
      ]
    },
    "1106": {
      "op": "frame_dig 2",
      "defined_out": [
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "rewardDebtBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "userKey#0"
      ]
    },
    "1108": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0"
      ]
    },
    "1110": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "amount#0",
        "pending#0",
        "rewardDebt#0",
        "rewardDebtBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "1"
      ]
    },
    "1111": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0"
      ]
    },
    "1113": {
      "op": "intc_0 // 0",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "0"
      ]
    },
    "1114": {
      "op": "itxn_field Fee",
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0"
      ]
    },
    "1116": {
      "op": "itxn_submit"
    },
    "1117": {
      "block": "claimRewards_after_if_else@9",
      "stack_in": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "pending#0"
      ]
    },
    "1118": {
      "block": "claimRewards_ternary_false@5",
      "stack_in": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "pending#0"
      ]
    },
    "1119": {
      "op": "frame_bury 0",
      "defined_out": [
        "pending#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0"
      ]
    },
    "1121": {
      "op": "b claimRewards_ternary_merge@6"
    },
    "1124": {
      "block": "claimRewards_ternary_false@2",
      "stack_in": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "rewardDebt#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0",
        "rewardDebt#0"
      ]
    },
    "1125": {
      "op": "frame_bury 1",
      "defined_out": [
        "rewardDebt#0"
      ],
      "stack_out": [
        "pending#0",
        "rewardDebt#0",
        "userKey#0",
        "rewardDebtBox#0",
        "amount#0"
      ]
    },
    "1127": {
      "op": "b claimRewards_ternary_merge@3"
    },
    "1130": {
      "subroutine": "smart_contracts/vault/staking_pool.algo.ts::StakingPool.emergencyWithdraw",
      "params": {},
      "block": "emergencyWithdraw",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "userKey#0"
      ],
      "stack_out": [
        "userKey#0"
      ]
    },
    "1132": {
      "op": "dup",
      "defined_out": [
        "userKey#0",
        "userKey#0 (copy)"
      ],
      "stack_out": [
        "userKey#0",
        "userKey#0 (copy)"
      ]
    },
    "1133": {
      "op": "bytec 4 // \"_amount\"",
      "defined_out": [
        "\"_amount\"",
        "userKey#0",
        "userKey#0 (copy)"
      ],
      "stack_out": [
        "userKey#0",
        "userKey#0 (copy)",
        "\"_amount\""
      ]
    },
    "1135": {
      "op": "concat",
      "defined_out": [
        "amountBox#0",
        "userKey#0"
      ],
      "stack_out": [
        "userKey#0",
        "amountBox#0"
      ]
    },
    "1136": {
      "op": "dup",
      "defined_out": [
        "amountBox#0",
        "amountBox#0 (copy)",
        "userKey#0"
      ],
      "stack_out": [
        "userKey#0",
        "amountBox#0",
        "amountBox#0 (copy)"
      ]
    },
    "1137": {
      "op": "box_len",
      "defined_out": [
        "amountBox#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "userKey#0"
      ],
      "stack_out": [
        "userKey#0",
        "amountBox#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1138": {
      "op": "bury 1",
      "stack_out": [
        "userKey#0",
        "amountBox#0",
        "maybe_exists%0#0"
      ]
    },
    "1140": {
      "op": "assert",
      "stack_out": [
        "userKey#0",
        "amountBox#0"
      ]
    },
    "1141": {
      "op": "dup",
      "stack_out": [
        "userKey#0",
        "amountBox#0",
        "amountBox#0 (copy)"
      ]
    },
    "1142": {
      "op": "box_get",
      "defined_out": [
        "amountBox#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "userKey#0"
      ],
      "stack_out": [
        "userKey#0",
        "amountBox#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1143": {
      "op": "swap",
      "stack_out": [
        "userKey#0",
        "amountBox#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ]
    },
    "1144": {
      "op": "btoi",
      "defined_out": [
        "amount#0",
        "amountBox#0",
        "maybe_exists%1#0",
        "userKey#0"
      ],
      "stack_out": [
        "userKey#0",
        "amountBox#0",
        "maybe_exists%1#0",
        "amount#0"
      ]
    },
    "1145": {
      "op": "swap",
      "stack_out": [
        "userKey#0",
        "amountBox#0",
        "amount#0",
        "maybe_exists%1#0"
      ]
    },
    "1146": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "userKey#0",
        "amountBox#0",
        "amount#0"
      ]
    },
    "1147": {
      "op": "swap",
      "stack_out": [
        "userKey#0",
        "amount#0",
        "amountBox#0"
      ]
    },
    "1148": {
      "op": "box_del",
      "defined_out": [
        "amount#0",
        "userKey#0",
        "{box_del}"
      ],
      "stack_out": [
        "userKey#0",
        "amount#0",
        "{box_del}"
      ]
    },
    "1149": {
      "op": "pop",
      "stack_out": [
        "userKey#0",
        "amount#0"
      ]
    },
    "1150": {
      "op": "dig 1",
      "stack_out": [
        "userKey#0",
        "amount#0",
        "userKey#0 (copy)"
      ]
    },
    "1152": {
      "op": "bytec 5 // \"_rewardDebt\"",
      "defined_out": [
        "\"_rewardDebt\"",
        "amount#0",
        "userKey#0",
        "userKey#0 (copy)"
      ],
      "stack_out": [
        "userKey#0",
        "amount#0",
        "userKey#0 (copy)",
        "\"_rewardDebt\""
      ]
    },
    "1154": {
      "op": "concat",
      "defined_out": [
        "amount#0",
        "tmp%0#2",
        "userKey#0"
      ],
      "stack_out": [
        "userKey#0",
        "amount#0",
        "tmp%0#2"
      ]
    },
    "1155": {
      "op": "box_del",
      "stack_out": [
        "userKey#0",
        "amount#0",
        "{box_del}"
      ]
    },
    "1156": {
      "op": "pop",
      "stack_out": [
        "userKey#0",
        "amount#0"
      ]
    },
    "1157": {
      "op": "dig 1",
      "stack_out": [
        "userKey#0",
        "amount#0",
        "userKey#0 (copy)"
      ]
    },
    "1159": {
      "op": "bytec 8 // \"_lastStakeTime\"",
      "defined_out": [
        "\"_lastStakeTime\"",
        "amount#0",
        "userKey#0",
        "userKey#0 (copy)"
      ],
      "stack_out": [
        "userKey#0",
        "amount#0",
        "userKey#0 (copy)",
        "\"_lastStakeTime\""
      ]
    },
    "1161": {
      "op": "concat",
      "stack_out": [
        "userKey#0",
        "amount#0",
        "tmp%0#2"
      ]
    },
    "1162": {
      "op": "box_del",
      "stack_out": [
        "userKey#0",
        "amount#0",
        "{box_del}"
      ]
    },
    "1163": {
      "op": "pop",
      "stack_out": [
        "userKey#0",
        "amount#0"
      ]
    },
    "1164": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "amount#0",
        "userKey#0"
      ],
      "stack_out": [
        "userKey#0",
        "amount#0",
        "0"
      ]
    },
    "1165": {
      "op": "bytec_1 // \"totalStaked\"",
      "defined_out": [
        "\"totalStaked\"",
        "0",
        "amount#0",
        "userKey#0"
      ],
      "stack_out": [
        "userKey#0",
        "amount#0",
        "0",
        "\"totalStaked\""
      ]
    },
    "1166": {
      "op": "app_global_get_ex",
      "defined_out": [
        "amount#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "userKey#0"
      ],
      "stack_out": [
        "userKey#0",
        "amount#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1167": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "userKey#0",
        "amount#0",
        "maybe_value%2#0"
      ]
    },
    "1168": {
      "op": "dig 1",
      "defined_out": [
        "amount#0",
        "amount#0 (copy)",
        "maybe_value%2#0",
        "userKey#0"
      ],
      "stack_out": [
        "userKey#0",
        "amount#0",
        "maybe_value%2#0",
        "amount#0 (copy)"
      ]
    },
    "1170": {
      "op": "-",
      "defined_out": [
        "amount#0",
        "new_state_value%0#0",
        "userKey#0"
      ],
      "stack_out": [
        "userKey#0",
        "amount#0",
        "new_state_value%0#0"
      ]
    },
    "1171": {
      "op": "bytec_1 // \"totalStaked\"",
      "stack_out": [
        "userKey#0",
        "amount#0",
        "new_state_value%0#0",
        "\"totalStaked\""
      ]
    },
    "1172": {
      "op": "swap",
      "stack_out": [
        "userKey#0",
        "amount#0",
        "\"totalStaked\"",
        "new_state_value%0#0"
      ]
    },
    "1173": {
      "op": "app_global_put",
      "stack_out": [
        "userKey#0",
        "amount#0"
      ]
    },
    "1174": {
      "op": "itxn_begin"
    },
    "1175": {
      "op": "itxn_field Amount",
      "stack_out": [
        "userKey#0"
      ]
    },
    "1177": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "1179": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1180": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1182": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1183": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1185": {
      "op": "itxn_submit"
    },
    "1186": {
      "retsub": true,
      "op": "retsub"
    },
    "1187": {
      "subroutine": "smart_contracts/vault/staking_pool.algo.ts::StakingPool.getUserStake",
      "params": {
        "user#0": "bytes"
      },
      "block": "getUserStake",
      "stack_in": [],
      "op": "proto 1 3"
    },
    "1190": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "ternary_result%0#1"
      ]
    },
    "1192": {
      "op": "dup",
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1"
      ]
    },
    "1193": {
      "op": "frame_dig -1",
      "defined_out": [
        "user#0 (copy)"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "user#0 (copy)"
      ]
    },
    "1195": {
      "op": "bytec 4 // \"_amount\"",
      "defined_out": [
        "\"_amount\"",
        "user#0 (copy)"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "user#0 (copy)",
        "\"_amount\""
      ]
    },
    "1197": {
      "op": "concat",
      "defined_out": [
        "amountBox#0"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0"
      ]
    },
    "1198": {
      "op": "dup",
      "defined_out": [
        "amountBox#0"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "amountBox#0"
      ]
    },
    "1199": {
      "op": "frame_dig -1",
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "amountBox#0",
        "user#0 (copy)"
      ]
    },
    "1201": {
      "op": "bytec 5 // \"_rewardDebt\"",
      "defined_out": [
        "\"_rewardDebt\"",
        "amountBox#0",
        "user#0 (copy)"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "amountBox#0",
        "user#0 (copy)",
        "\"_rewardDebt\""
      ]
    },
    "1203": {
      "op": "concat",
      "defined_out": [
        "amountBox#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "amountBox#0",
        "rewardDebtBox#0"
      ]
    },
    "1204": {
      "op": "swap",
      "defined_out": [
        "amountBox#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "amountBox#0"
      ]
    },
    "1205": {
      "op": "frame_dig -1",
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "amountBox#0",
        "user#0 (copy)"
      ]
    },
    "1207": {
      "op": "bytec 8 // \"_lastStakeTime\"",
      "defined_out": [
        "\"_lastStakeTime\"",
        "amountBox#0",
        "rewardDebtBox#0",
        "user#0 (copy)"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "amountBox#0",
        "user#0 (copy)",
        "\"_lastStakeTime\""
      ]
    },
    "1209": {
      "op": "concat",
      "defined_out": [
        "amountBox#0",
        "lastStakeTimeBox#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "amountBox#0",
        "lastStakeTimeBox#0"
      ]
    },
    "1210": {
      "op": "swap",
      "defined_out": [
        "amountBox#0",
        "lastStakeTimeBox#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "amountBox#0"
      ]
    },
    "1211": {
      "op": "box_len",
      "defined_out": [
        "amountBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1212": {
      "op": "bury 1",
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%0#0"
      ]
    },
    "1214": {
      "op": "bz getUserStake_ternary_false@2",
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ]
    },
    "1217": {
      "op": "frame_dig 2",
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "amountBox#0"
      ]
    },
    "1219": {
      "op": "box_get",
      "defined_out": [
        "amountBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1220": {
      "op": "swap",
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ]
    },
    "1221": {
      "op": "btoi",
      "defined_out": [
        "amountBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%1#0",
        "maybe_value_converted%0#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%1#0",
        "maybe_value_converted%0#0"
      ]
    },
    "1222": {
      "op": "swap",
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_value_converted%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1223": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "defined_out": [
        "amountBox#0",
        "lastStakeTimeBox#0",
        "rewardDebtBox#0",
        "ternary_result%0#1"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "ternary_result%0#1"
      ]
    },
    "1224": {
      "op": "frame_bury 0",
      "defined_out": [
        "amountBox#0",
        "lastStakeTimeBox#0",
        "rewardDebtBox#0",
        "ternary_result%0#1"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ]
    },
    "1226": {
      "block": "getUserStake_ternary_merge@3",
      "stack_in": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "rewardDebtBox#0"
      ]
    },
    "1228": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1229": {
      "op": "bury 1",
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%2#0"
      ]
    },
    "1231": {
      "op": "bz getUserStake_ternary_false@5",
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ]
    },
    "1234": {
      "op": "frame_dig 3",
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "rewardDebtBox#0"
      ]
    },
    "1236": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1237": {
      "op": "swap",
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ]
    },
    "1238": {
      "op": "btoi",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value_converted%1#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%3#0",
        "maybe_value_converted%1#0"
      ]
    },
    "1239": {
      "op": "swap",
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_value_converted%1#0",
        "maybe_exists%3#0"
      ]
    },
    "1240": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "defined_out": [
        "rewardDebtBox#0",
        "ternary_result%1#1"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "ternary_result%1#1"
      ]
    },
    "1241": {
      "op": "frame_bury 1",
      "defined_out": [
        "rewardDebtBox#0",
        "ternary_result%1#1"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ]
    },
    "1243": {
      "block": "getUserStake_ternary_merge@6",
      "stack_in": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "lastStakeTimeBox#0"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "lastStakeTimeBox#0"
      ]
    },
    "1245": {
      "op": "box_len",
      "defined_out": [
        "lastStakeTimeBox#0",
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1246": {
      "op": "bury 1",
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%4#0"
      ]
    },
    "1248": {
      "op": "bz getUserStake_ternary_false@8",
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ]
    },
    "1251": {
      "op": "frame_dig 4",
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "lastStakeTimeBox#0"
      ]
    },
    "1253": {
      "op": "box_get",
      "defined_out": [
        "lastStakeTimeBox#0",
        "maybe_exists%5#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1254": {
      "op": "swap",
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%5#0",
        "maybe_value%5#0"
      ]
    },
    "1255": {
      "op": "btoi",
      "defined_out": [
        "lastStakeTimeBox#0",
        "maybe_exists%5#0",
        "maybe_value_converted%2#0"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_exists%5#0",
        "maybe_value_converted%2#0"
      ]
    },
    "1256": {
      "op": "swap",
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "maybe_value_converted%2#0",
        "maybe_exists%5#0"
      ]
    },
    "1257": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "defined_out": [
        "lastStakeTimeBox#0",
        "ternary_result%2#1"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "ternary_result%2#1"
      ]
    },
    "1258": {
      "block": "getUserStake_ternary_merge@9",
      "stack_in": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "ternary_result%2#1"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "ternary_result%0#1"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "ternary_result%2#1",
        "ternary_result%0#1"
      ]
    },
    "1260": {
      "op": "frame_dig 1",
      "defined_out": [
        "ternary_result%0#1",
        "ternary_result%1#1"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "ternary_result%2#1",
        "ternary_result%0#1",
        "ternary_result%1#1"
      ]
    },
    "1262": {
      "op": "uncover 2",
      "defined_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "ternary_result%2#1"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "ternary_result%0#1",
        "ternary_result%1#1",
        "ternary_result%2#1"
      ]
    },
    "1264": {
      "op": "frame_bury 2"
    },
    "1266": {
      "op": "frame_bury 1"
    },
    "1268": {
      "op": "frame_bury 0"
    },
    "1270": {
      "retsub": true,
      "op": "retsub"
    },
    "1271": {
      "block": "getUserStake_ternary_false@8",
      "stack_in": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "ternary_result%2#1"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "ternary_result%2#1"
      ]
    },
    "1272": {
      "op": "b getUserStake_ternary_merge@9"
    },
    "1275": {
      "block": "getUserStake_ternary_false@5",
      "stack_in": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "ternary_result%1#1"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "ternary_result%1#1"
      ]
    },
    "1276": {
      "op": "frame_bury 1",
      "defined_out": [
        "ternary_result%1#1"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ]
    },
    "1278": {
      "op": "b getUserStake_ternary_merge@6"
    },
    "1281": {
      "block": "getUserStake_ternary_false@2",
      "stack_in": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "ternary_result%0#1"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0",
        "ternary_result%0#1"
      ]
    },
    "1282": {
      "op": "frame_bury 0",
      "defined_out": [
        "ternary_result%0#1"
      ],
      "stack_out": [
        "ternary_result%0#1",
        "ternary_result%1#1",
        "amountBox#0",
        "rewardDebtBox#0",
        "lastStakeTimeBox#0"
      ]
    },
    "1284": {
      "op": "b getUserStake_ternary_merge@3"
    },
    "1287": {
      "subroutine": "smart_contracts/vault/staking_pool.algo.ts::StakingPool.getPendingRewards",
      "params": {
        "user#0": "bytes"
      },
      "block": "getPendingRewards",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1290": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "accRewardPerShare#0"
      ]
    },
    "1292": {
      "op": "dupn 6",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0"
      ]
    },
    "1294": {
      "op": "frame_dig -1",
      "defined_out": [
        "user#0 (copy)"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "user#0 (copy)"
      ]
    },
    "1296": {
      "op": "bytec 4 // \"_amount\"",
      "defined_out": [
        "\"_amount\"",
        "user#0 (copy)"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "user#0 (copy)",
        "\"_amount\""
      ]
    },
    "1298": {
      "op": "concat",
      "defined_out": [
        "amountBox#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0"
      ]
    },
    "1299": {
      "op": "dup",
      "defined_out": [
        "amountBox#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "amountBox#0"
      ]
    },
    "1300": {
      "op": "frame_dig -1",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "amountBox#0",
        "user#0 (copy)"
      ]
    },
    "1302": {
      "op": "bytec 5 // \"_rewardDebt\"",
      "defined_out": [
        "\"_rewardDebt\"",
        "amountBox#0",
        "user#0 (copy)"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "amountBox#0",
        "user#0 (copy)",
        "\"_rewardDebt\""
      ]
    },
    "1304": {
      "op": "concat",
      "defined_out": [
        "amountBox#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "amountBox#0",
        "rewardDebtBox#0"
      ]
    },
    "1305": {
      "op": "swap",
      "defined_out": [
        "amountBox#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "amountBox#0"
      ]
    },
    "1306": {
      "op": "box_len",
      "defined_out": [
        "amountBox#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1307": {
      "op": "bury 1",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "maybe_exists%0#0"
      ]
    },
    "1309": {
      "op": "bnz getPendingRewards_after_if_else@2",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0"
      ]
    },
    "1312": {
      "op": "intc_0 // 0",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "0"
      ]
    },
    "1313": {
      "op": "frame_bury 0"
    },
    "1315": {
      "retsub": true,
      "op": "retsub"
    },
    "1316": {
      "block": "getPendingRewards_after_if_else@2",
      "stack_in": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "amountBox#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "amountBox#0"
      ]
    },
    "1318": {
      "op": "box_get",
      "defined_out": [
        "amountBox#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1319": {
      "op": "swap",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ]
    },
    "1320": {
      "op": "btoi",
      "defined_out": [
        "amount#0",
        "amountBox#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "maybe_exists%1#0",
        "amount#0"
      ]
    },
    "1321": {
      "op": "frame_bury 2",
      "defined_out": [
        "amount#0",
        "amountBox#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "maybe_exists%1#0"
      ]
    },
    "1323": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0"
      ]
    },
    "1324": {
      "op": "frame_dig 8",
      "defined_out": [
        "amount#0",
        "amountBox#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "rewardDebtBox#0"
      ]
    },
    "1326": {
      "op": "box_len",
      "defined_out": [
        "amount#0",
        "amountBox#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1327": {
      "op": "bury 1",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "maybe_exists%2#0"
      ]
    },
    "1329": {
      "op": "bz getPendingRewards_ternary_false@4",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0"
      ]
    },
    "1332": {
      "op": "frame_dig 8",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "rewardDebtBox#0"
      ]
    },
    "1334": {
      "op": "box_get",
      "defined_out": [
        "amount#0",
        "amountBox#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1335": {
      "op": "swap",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ]
    },
    "1336": {
      "op": "btoi",
      "defined_out": [
        "amount#0",
        "amountBox#0",
        "maybe_exists%3#0",
        "maybe_value_converted%1#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "maybe_exists%3#0",
        "maybe_value_converted%1#0"
      ]
    },
    "1337": {
      "op": "swap",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "maybe_value_converted%1#0",
        "maybe_exists%3#0"
      ]
    },
    "1338": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "defined_out": [
        "amount#0",
        "amountBox#0",
        "rewardDebt#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "rewardDebt#0"
      ]
    },
    "1339": {
      "op": "frame_bury 4",
      "defined_out": [
        "amount#0",
        "amountBox#0",
        "rewardDebt#0",
        "rewardDebtBox#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0"
      ]
    },
    "1341": {
      "block": "getPendingRewards_ternary_merge@5",
      "stack_in": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "0"
      ]
    },
    "1342": {
      "op": "bytec_0 // \"accRewardPerShare\"",
      "defined_out": [
        "\"accRewardPerShare\"",
        "0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "0",
        "\"accRewardPerShare\""
      ]
    },
    "1343": {
      "op": "app_global_get_ex",
      "defined_out": [
        "accRewardPerShare#0",
        "maybe_exists%4#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "accRewardPerShare#0",
        "maybe_exists%4#0"
      ]
    },
    "1344": {
      "op": "swap",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "maybe_exists%4#0",
        "accRewardPerShare#0"
      ]
    },
    "1345": {
      "op": "dup",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "maybe_exists%4#0",
        "accRewardPerShare#0",
        "accRewardPerShare#0 (copy)"
      ]
    },
    "1346": {
      "op": "cover 2",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "accRewardPerShare#0",
        "maybe_exists%4#0",
        "accRewardPerShare#0"
      ]
    },
    "1348": {
      "op": "frame_bury 0",
      "defined_out": [
        "accRewardPerShare#0",
        "maybe_exists%4#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "accRewardPerShare#0",
        "maybe_exists%4#0"
      ]
    },
    "1350": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "accRewardPerShare#0"
      ]
    },
    "1351": {
      "op": "intc_0 // 0",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "accRewardPerShare#0",
        "0"
      ]
    },
    "1352": {
      "op": "bytec_1 // \"totalStaked\"",
      "defined_out": [
        "\"totalStaked\"",
        "0",
        "accRewardPerShare#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "accRewardPerShare#0",
        "0",
        "\"totalStaked\""
      ]
    },
    "1353": {
      "op": "app_global_get_ex",
      "defined_out": [
        "accRewardPerShare#0",
        "maybe_exists%5#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "accRewardPerShare#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1354": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "accRewardPerShare#0",
        "maybe_value%5#0"
      ]
    },
    "1355": {
      "op": "swap",
      "defined_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "maybe_value%5#0",
        "accRewardPerShare#7"
      ]
    },
    "1356": {
      "op": "frame_bury 1",
      "defined_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "maybe_value%5#0"
      ]
    },
    "1358": {
      "op": "bz getPendingRewards_after_if_else@12",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0"
      ]
    },
    "1361": {
      "op": "global LatestTimestamp"
    },
    "1363": {
      "op": "dup",
      "defined_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "currentTime#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "currentTime#0",
        "currentTime#0"
      ]
    },
    "1364": {
      "op": "frame_bury 3",
      "defined_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "currentTime#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "currentTime#0"
      ]
    },
    "1366": {
      "op": "intc_0 // 0",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "currentTime#0",
        "0"
      ]
    },
    "1367": {
      "op": "bytec_3 // \"lastUpdateTime\"",
      "defined_out": [
        "\"lastUpdateTime\"",
        "0",
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "currentTime#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "currentTime#0",
        "0",
        "\"lastUpdateTime\""
      ]
    },
    "1368": {
      "op": "app_global_get_ex",
      "defined_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "currentTime#0",
        "maybe_exists%6#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "currentTime#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "1369": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "currentTime#0",
        "maybe_value%6#0"
      ]
    },
    "1370": {
      "op": ">",
      "defined_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "currentTime#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "tmp%1#0"
      ]
    },
    "1371": {
      "op": "bz getPendingRewards_ternary_false@8",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0"
      ]
    },
    "1374": {
      "op": "intc_0 // 0",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "0"
      ]
    },
    "1375": {
      "op": "bytec_3 // \"lastUpdateTime\"",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "0",
        "\"lastUpdateTime\""
      ]
    },
    "1376": {
      "op": "app_global_get_ex",
      "defined_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "currentTime#0",
        "maybe_exists%7#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "1377": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "maybe_value%7#0"
      ]
    },
    "1378": {
      "op": "frame_dig 3",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "maybe_value%7#0",
        "currentTime#0"
      ]
    },
    "1380": {
      "op": "swap",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "currentTime#0",
        "maybe_value%7#0"
      ]
    },
    "1381": {
      "op": "-",
      "defined_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "currentTime#0",
        "timeDiff#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "timeDiff#0"
      ]
    },
    "1382": {
      "op": "frame_bury 5",
      "defined_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "currentTime#0",
        "timeDiff#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0"
      ]
    },
    "1384": {
      "block": "getPendingRewards_ternary_merge@9",
      "stack_in": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "accRewardPerShare#7"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "accRewardPerShare#7"
      ]
    },
    "1386": {
      "op": "frame_bury 1",
      "defined_out": [
        "accRewardPerShare#7"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0"
      ]
    },
    "1388": {
      "op": "frame_dig 5",
      "defined_out": [
        "accRewardPerShare#7",
        "timeDiff#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "timeDiff#0"
      ]
    },
    "1390": {
      "op": "bz getPendingRewards_after_if_else@12",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0"
      ]
    },
    "1393": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "accRewardPerShare#7",
        "timeDiff#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "0"
      ]
    },
    "1394": {
      "op": "bytec 7 // \"rewardRate\"",
      "defined_out": [
        "\"rewardRate\"",
        "0",
        "accRewardPerShare#7",
        "timeDiff#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "0",
        "\"rewardRate\""
      ]
    },
    "1396": {
      "op": "app_global_get_ex",
      "defined_out": [
        "accRewardPerShare#7",
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "timeDiff#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "1397": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "maybe_value%8#0"
      ]
    },
    "1398": {
      "op": "frame_dig 5",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "maybe_value%8#0",
        "timeDiff#0"
      ]
    },
    "1400": {
      "op": "*",
      "defined_out": [
        "accRewardPerShare#7",
        "reward#0",
        "timeDiff#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "reward#0"
      ]
    },
    "1401": {
      "op": "intc_2 // 1000000000000",
      "defined_out": [
        "1000000000000",
        "accRewardPerShare#7",
        "reward#0",
        "timeDiff#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "reward#0",
        "1000000000000"
      ]
    },
    "1402": {
      "op": "*",
      "defined_out": [
        "accRewardPerShare#7",
        "timeDiff#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "tmp%3#0"
      ]
    },
    "1403": {
      "op": "intc_0 // 0",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "tmp%3#0",
        "0"
      ]
    },
    "1404": {
      "op": "bytec_1 // \"totalStaked\"",
      "defined_out": [
        "\"totalStaked\"",
        "0",
        "accRewardPerShare#7",
        "timeDiff#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "tmp%3#0",
        "0",
        "\"totalStaked\""
      ]
    },
    "1405": {
      "op": "app_global_get_ex",
      "defined_out": [
        "accRewardPerShare#7",
        "maybe_exists%9#0",
        "maybe_value%9#0",
        "timeDiff#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "tmp%3#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "1406": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "tmp%3#0",
        "maybe_value%9#0"
      ]
    },
    "1407": {
      "op": "/",
      "defined_out": [
        "accRewardPerShare#7",
        "timeDiff#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "tmp%4#0"
      ]
    },
    "1408": {
      "op": "frame_dig 0",
      "defined_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "timeDiff#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "tmp%4#0",
        "accRewardPerShare#0"
      ]
    },
    "1410": {
      "op": "+",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "accRewardPerShare#7"
      ]
    },
    "1411": {
      "op": "frame_bury 1",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0"
      ]
    },
    "1413": {
      "block": "getPendingRewards_after_if_else@12",
      "stack_in": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "amount#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "amount#0"
      ]
    },
    "1415": {
      "op": "frame_dig 1",
      "defined_out": [
        "accRewardPerShare#0",
        "amount#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "amount#0",
        "accRewardPerShare#0"
      ]
    },
    "1417": {
      "op": "*",
      "defined_out": [
        "accRewardPerShare#0",
        "amount#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "tmp%5#0"
      ]
    },
    "1418": {
      "op": "intc_2 // 1000000000000",
      "defined_out": [
        "1000000000000",
        "accRewardPerShare#0",
        "amount#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "tmp%5#0",
        "1000000000000"
      ]
    },
    "1419": {
      "op": "/",
      "defined_out": [
        "accRewardPerShare#0",
        "amount#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "tmp%6#0"
      ]
    },
    "1420": {
      "op": "dup",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "tmp%6#0",
        "tmp%6#0"
      ]
    },
    "1421": {
      "op": "frame_bury 6",
      "defined_out": [
        "accRewardPerShare#0",
        "amount#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "tmp%6#0"
      ]
    },
    "1423": {
      "op": "frame_dig 4",
      "defined_out": [
        "accRewardPerShare#0",
        "amount#0",
        "rewardDebt#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "tmp%6#0",
        "rewardDebt#0"
      ]
    },
    "1425": {
      "op": ">",
      "defined_out": [
        "accRewardPerShare#0",
        "amount#0",
        "rewardDebt#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "tmp%7#0"
      ]
    },
    "1426": {
      "op": "bz getPendingRewards_ternary_false@14",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0"
      ]
    },
    "1429": {
      "op": "frame_dig 6",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "tmp%6#0"
      ]
    },
    "1431": {
      "op": "frame_dig 4",
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "tmp%6#0",
        "rewardDebt#0"
      ]
    },
    "1433": {
      "op": "-",
      "defined_out": [
        "accRewardPerShare#0",
        "amount#0",
        "rewardDebt#0",
        "ternary_result%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "ternary_result%2#0"
      ]
    },
    "1434": {
      "block": "getPendingRewards_ternary_merge@15",
      "stack_in": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "ternary_result%2#0"
      ],
      "op": "frame_bury 0",
      "defined_out": [
        "ternary_result%2#0"
      ]
    },
    "1436": {
      "retsub": true,
      "op": "retsub"
    },
    "1437": {
      "block": "getPendingRewards_ternary_false@14",
      "stack_in": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "ternary_result%2#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "ternary_result%2#0"
      ]
    },
    "1438": {
      "op": "b getPendingRewards_ternary_merge@15"
    },
    "1441": {
      "block": "getPendingRewards_ternary_false@8",
      "stack_in": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "timeDiff#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "timeDiff#0"
      ]
    },
    "1442": {
      "op": "frame_bury 5",
      "defined_out": [
        "timeDiff#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0"
      ]
    },
    "1444": {
      "op": "b getPendingRewards_ternary_merge@9"
    },
    "1447": {
      "block": "getPendingRewards_ternary_false@4",
      "stack_in": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "rewardDebt#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0",
        "rewardDebt#0"
      ]
    },
    "1448": {
      "op": "frame_bury 4",
      "defined_out": [
        "rewardDebt#0"
      ],
      "stack_out": [
        "accRewardPerShare#0",
        "accRewardPerShare#7",
        "amount#0",
        "currentTime#0",
        "rewardDebt#0",
        "timeDiff#0",
        "tmp%6#0",
        "amountBox#0",
        "rewardDebtBox#0"
      ]
    },
    "1450": {
      "op": "b getPendingRewards_ternary_merge@5"
    },
    "1453": {
      "subroutine": "smart_contracts/vault/staking_pool.algo.ts::StakingPool.getPoolInfo",
      "params": {},
      "block": "getPoolInfo",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1454": {
      "op": "bytec_1 // \"totalStaked\"",
      "defined_out": [
        "\"totalStaked\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"totalStaked\""
      ]
    },
    "1455": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1456": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1457": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "0"
      ]
    },
    "1458": {
      "op": "bytec 7 // \"rewardRate\"",
      "defined_out": [
        "\"rewardRate\"",
        "0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0",
        "\"rewardRate\""
      ]
    },
    "1460": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1461": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0"
      ]
    },
    "1462": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "1463": {
      "op": "bytec_0 // \"accRewardPerShare\"",
      "defined_out": [
        "\"accRewardPerShare\"",
        "0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "0",
        "\"accRewardPerShare\""
      ]
    },
    "1464": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1465": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0"
      ]
    },
    "1466": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "1467": {
      "op": "bytec_3 // \"lastUpdateTime\"",
      "defined_out": [
        "\"lastUpdateTime\"",
        "0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "0",
        "\"lastUpdateTime\""
      ]
    },
    "1468": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1469": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ]
    },
    "1470": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "1471": {
      "op": "bytec_2 // \"poolActive\"",
      "defined_out": [
        "\"poolActive\"",
        "0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "0",
        "\"poolActive\""
      ]
    },
    "1472": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1473": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ]
    },
    "1474": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "0"
      ]
    },
    "1475": {
      "op": "bytec 9 // \"emergencyPaused\"",
      "defined_out": [
        "\"emergencyPaused\"",
        "0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "0",
        "\"emergencyPaused\""
      ]
    },
    "1477": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1478": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_value%5#0"
      ]
    },
    "1479": {
      "retsub": true,
      "op": "retsub"
    }
  }
}